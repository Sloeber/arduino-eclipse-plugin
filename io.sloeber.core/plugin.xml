<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.6"?>
<plugin>
<!-- 
####################################################################################### 
####################################################################################### 
##                                                                                   ##
##   Extension Points                                                                ## 
##                                                                                   ##
####################################################################################### 
####################################################################################### 
-->
<!-- 
<extension point="org.eclipse.cdt.core.LanguageSettingsProvider">
<provider
      class="io.sloeber.core.toolchain.ArduinoLanguageProvider"
      id="io.sloeber.languageSettingsProvider"
      name="%provider.compoler.settings.name"
      parameter='${COMMAND} -E -P -v -dD -D__IN_ECLIPSE__ "${INPUTS}"'
      prefer-non-shared="true">
<language-scope id="org.eclipse.cdt.core.gcc"/>
<language-scope id="org.eclipse.cdt.core.g++"/>
</provider>
</extension>

-->


<!-- 
####################################################################################### 
#    Arduino Nature                                                                       # 
####################################################################################### 
-->
 	<extension point="org.eclipse.core.resources.natures"
 		id="io.sloeber.arduinonature" 
 		name="arduinoNature" >
       <runtime>
           <run class="io.sloeber.core.natures.ArduinoNature" />
       </runtime>
       <requires-nature id="org.eclipse.cdt.core.cnature"/>
       <requires-nature
             id="org.eclipse.cdt.core.ccnature">
       </requires-nature>
   </extension>

<!--
####################################################################################### 
#    Launch Configuration                                                             #
####################################################################################### 
-->
<!-- Arduino Launch Configuration -->
    <extension
         point="org.eclipse.debug.core.launchConfigurationTypes">
      <launchConfigurationType
            delegate="io.sloeber.core.api.LaunchConfiguration"
            id="io.sloeber.tools.arduinoLaunchConfiguration"
            modes="run, debug"
            name="%launchConfigurationType.arduio.name"
            public="true">
      </launchConfigurationType>
   </extension>
<!--
####################################################################################### 
#    Arduino Plugin Commands                                                              # 
####################################################################################### 
-->




 
<!-- 

####################################################################################### 
####################################################################################### 
##                                                                                   ##
##   BuildDef                                                                        ##
##                                                                                   ## 
####################################################################################### 
####################################################################################### 
-->
 
	<extension id="io.sloeber.builddef"
        point="io.sloeber.autoBuild.buildDefinitions"
		name="%extension.name.0" >
		

<!-- 
####################################################################################### 
#    AVR-GCC Compiler                                                                  # 
####################################################################################### 
-->
		<builder
        autoBuildTarget="all"
        buildRunner="io.sloeber.core.toolchain.SloeberBuildRunner"
        cleanBuildTarget="clean"
        command="${sloeber.make_location}make"
        errorParsers="org.eclipse.cdt.core.MakeErrorParser"
        id="io.sloeber.gnu.builder"
        ignoreErrCmd="-k"
        incrementalBuildTarget="all"
        name="%toolchain.builder.name"
        parallelBuildCmd="-j*"
        reservedMacroNames="ROOT,DEPS,OBJS,.*_SRCS,EXECUTABLES,SUBDIRS,LIBS,USER_OBJS,.*_INPUTS,.*_OUTPUTS"
        variableFormat="${=}">
  </builder>
  <projectType
        environmentSupplier="io.sloeber.core.toolchain.SloeberProjectVariableSupplier"
        id="io.sloeber.core.sketch"
        name="%projectType.name"
        >
     
     <!-- This config and toolchain 'Release' is the standard "just like Arduino IDE" configuration. -->
     <!-- It is also used for the base of the Debug configuration (for use with a JTAG/DragonAVR etc). -->
     <!-- TODO: Consider renaming as base. -->
     <configuration
           cleanCommand="rm -f"
           id="io.sloeber.core.configuration.release"
           languageSettingsProviders="io.sloeber.languageSettingsProvider"
           name="%configuration.name">
        <toolChain
              archList="all"
              environmentSupplier="io.sloeber.core.toolchain.SloeberConfigurationVariableSupplier"
              id="io.sloeber.core.toolChain.release"
              isAbstract="false"
              languageSettingsProviders="io.sloeber.languageSettingsProvider"
              name="%toolChain.name"
              osList="all"
              targetTool="io.sloeber.tool.size">
           <targetPlatform
                 archList="all"
                 binaryParser="org.eclipse.cdt.core.ELF"
                 id="io.sloeber.targetplatform"
                 name="%targetPlatform.name"
                 osList="all">
           </targetPlatform>
           <builder
                 id="io.sloeber.sketch.builder"
                 name="%toolchain.gnu.builder.name"
                 superClass="io.sloeber.gnu.builder">
           </builder>
           <optionCategory
                 id="io.sloeber.core.optionCategory.includePaths"
                 name="%optionCategory.include.name">
           </optionCategory>
           <tool
                 announcement="%tool.Arduino.CPP.announcement"
                 command="${recipe.cpp.o.pattern}"
                 commandLinePattern="recipe.cpp.o.pattern"
                 errorParsers="org.eclipse.cdt.core.GCCErrorParser"
                 id="io.sloeber.tool.sketch.compiler.cpp"
                 name="%tool.Arduino.CPP2O.name"
                 natureFilter="both">
              <optionCategory
                    id="io.sloeber.core.cpp.optionCategory.includePaths"
                    name="%optionCategory.include.name">
              </optionCategory>
              <option
                    browseType="directory"
                    category="io.sloeber.core.cpp.optionCategory.includePaths"
                    command="-I"
                    id="io.sloeber.compiler.cpp.sketch.option.incpath"
                    name="%option.include.path.name"
                    resourceFilter="project"
                    valueType="includePath">
              </option>
              <inputType
                    id="io.sloeber.compiler.cpp.sketch.input"
                    name="%inputType.CPP.name"
                    sourceContentType="org.eclipse.cdt.core.cxxSource">
              </inputType>
              <outputType
                    buildVariable="LINK_OBJ"
                    id="io.sloeber.compiler.cpp.sketch.link.output"
                    name="%outputType.CPP.link.name"
                    nameProvider="io.sloeber.managedBuild.Internal.LinkNameProvider"
                    outputExtension="o">
              </outputType>
              <outputType
                    buildVariable="AR_OBJ"
                    id="io.sloeber.compiler.cpp.ar.output"
                    name="%outputType.CPP.AR.name"
                    nameProvider="io.sloeber.managedBuild.Internal.ArchiveNameProvider"
                    outputExtension="o">
              </outputType>
           </tool>
           <tool
                 announcement="%tool.Arduino.C.announcement"
                 command="${recipe.c.o.pattern}"
                 commandLinePattern="recipe.c.o.pattern"
                 errorParsers="org.eclipse.cdt.core.GCCErrorParser"
                 id="io.sloeber.tool.compiler.c"
                 name="%tool.Arduino.C2O.name"
                 natureFilter="both">
              <optionCategory
                    id="io.sloeber.core.c.optionCategory.includePaths"
                    name="%optionCategory.include.name">
              </optionCategory>
              <option
                    browseType="directory"
                    category="io.sloeber.core.c.optionCategory.includePaths"
                    command="-I"
                    id="io.sloeber.compiler.c.sketch.option.incpath"
                    name="%option.include.path.name"
                    resourceFilter="project"
                    valueType="includePath">
              </option>
              <inputType
                    id="io.sloeber.compiler.c.sketch.input"
                    name="%inputType.C.name"
                    sourceContentType="org.eclipse.cdt.core.cSource">
              </inputType>
              <outputType
                    buildVariable="LINK_OBJ"
                    id="io.sloeber.compiler.c.link.output"
                    name="%outputType.C.link.name"
                    nameProvider="io.sloeber.managedBuild.Internal.LinkNameProvider"
                    outputExtension="o">
              </outputType>
              <outputType
                    buildVariable="AR_OBJ"
                    id="io.sloeber.compiler.c.ar.output"
                    name="%outputType.C.AR.name"
                    nameProvider="io.sloeber.managedBuild.Internal.ArchiveNameProvider"
                    outputExtension="o">
              </outputType>
           </tool>
           <tool
                 announcement="%tool.Arduino.S.announcement"
                 command="${recipe.S.o.pattern}"
                 commandLinePattern="recipe.S.o.pattern"
                 errorParsers="org.eclipse.cdt.core.GCCErrorParser"
                 id="io.sloeber.tool.sketch.compiler.s"
                 name="%tool.Arduino.S20.name"
                 natureFilter="both">
              <optionCategory
                    id="io.sloeber.core.asm.optionCategory.includePaths"
                    name="%optionCategory.include.name">
              </optionCategory>
              <option
                    browseType="directory"
                    category="io.sloeber.core.asm.optionCategory.includePaths"
                    command="-I"
                    id="io.sloeber.compiler.asm.sketch.option.incpath"
                    name="%option.include.path.name"
                    resourceFilter="project"
                    valueType="includePath">
              </option>
              <inputType
                    id="io.sloeber.compiler.S.sketch.input"
                    name="%inputType.Asembly.name"
                    sourceContentType="org.eclipse.cdt.core.asmSource">
              </inputType>
              <outputType
                    buildVariable="LINK_OBJ"
                    id="io.sloeber.compiler.S.sketch.link.output"
                    name="%outputType.S.link.name"
                    nameProvider="io.sloeber.managedBuild.Internal.LinkNameProvider"
                    outputExtension="o">
              </outputType>
              <outputType
                    buildVariable="AR_OBJ"
                    id="io.sloeber.compiler.S.ar.output"
                    name="%outputType.S.AR.name"
                    nameProvider="io.sloeber.managedBuild.Internal.ArchiveNameProvider"
                    outputExtension="o">
              </outputType>
           </tool>
           <tool
                 announcement="%tool.Arduino.archiver.announcement"
                 command="${recipe.ar.pattern}"
                 commandLinePattern="recipe.ar.pattern"
                 errorParsers="org.eclipse.cdt.core.GLDErrorParser"
                 id="io.sloeber.tool.ar"
                 name="%tool.archiver.name">
              <outputType
                    buildVariable="AR"
                    id="io.sloeber.tool.archiver.output"
                    name="%outputType.archiver.name"
                    outputExtension="ar"
                    outputName="${archive_file_path}">
              </outputType>
              <inputType
                    extensions="o"
                    id="io.sloeber.tool.archiver.input"
                    name="%inputType.archiver.name">
              </inputType>
           </tool>
           <tool
                 announcement="%tool.Arduino.combiner.announcement"
                 command="${recipe.c.combine.pattern}"
                 commandLinePattern="recipe.c.combine.pattern"
                 errorParsers="org.eclipse.cdt.core.GLDErrorParser"
                 id="io.sloeber.tool.combine"
                 name="%tool.combiner.name"
                 natureFilter="both">
              <outputType
                    buildVariable="ELF"
                    id="io.sloeber.tool.combiner.output"
                    name="%outputType.elf.name"
                    outputName="${ProjName}.elf"
                    outputExtension="elf">
              </outputType>
                            <inputType
                                  id="io.sloeber.tool.combiner.ob.input"
                                  name="%inputType.linker.name"
                                  outputTypeID="io.sloeber.compiler.c.link.output">
              </inputType>
              <inputType
                    id="io.sloeber.tool.combiner.ar.input"
                    name="Build Archives"
                    outputTypeID="io.sloeber.tool.archiver.output">
              </inputType>
           </tool>
           <tool
                 announcement="%tool.obcopy.announcement"
                 command="all objcopy commands"
                 commandLinePattern="${sloeber.objcopy}"
                 id="io.sloeber.tool.objcopy.eep"
                 isAbstract="false"
                 name="%tool.objcopy.name"
                 natureFilter="both">
              <inputType
                    id="io.sloeber.tool.objcopy.eep.input"
                    name="%inputType.objcopy.name"
                    outputTypeID="io.sloeber.tool.combiner.output">
              </inputType>
              <outputType
                    buildVariable="HEX"
                    id="io.sloeber.tool.objcopy.output"
                    name="%outputType.hexdump.name"
                    outputName="${ProjName}.hex"
                    outputExtension="hex">
              </outputType>
           </tool>
           <tool
                 announcement="%tool.printsize.announcement"
                 command="${sloeber.size.switch} "
                 commandLinePattern="${sloeber.size.switch} "
                 id="io.sloeber.tool.size"
                 isAbstract="false"
                 name="%tool.printsize.name">
              <inputType
                    id="io.sloeber.tool.size.input"
                    outputTypeID="io.sloeber.tool.objcopy.output">
              </inputType>
              <outputType
                    buildVariable="SIZEDUMMY"
                    id="io.sloeber.tool.size.output"
                    name="size info"
                    outputName="${ProjName}.size"
                    outputExtension="size">
              </outputType>
           </tool>
        </toolChain>
     </configuration>
  </projectType>

	</extension>




<!-- 
####################################################################################### 
#    Content Types                                                                    # 
####################################################################################### 
-->
	<extension
		point="org.eclipse.core.contenttype.contentTypes">
    <content-type
          base-type="org.eclipse.core.runtime.text"
          file-extensions="eep"
          id="io.sloeber.contenttype.eeprom"
          name="%content-type.hexdump.name">
    </content-type>
		<content-type id="io.sloeber.contenttype.hex"
			base-type="org.eclipse.core.runtime.text"
			file-extensions="hex"
			name="%content-type.hexdump.flash.name">
		</content-type>
	</extension>

<!-- 
####################################################################################### 
#    ino and pde association  
#   this makes that the *.ino and *.pde files are treated as cpp files                
# 
####################################################################################### 
-->
 <extension point="org.eclipse.core.contenttype.contentTypes">

<!-- declares a content type for ino and pde source files -->
<content-type id="cxxSource" name="%cxxSourceName"
base-type="org.eclipse.cdt.core.cSource"
file-extensions="ino,pde"
priority="high"/>
 </extension>
 <extension
       id="io.sloeber.core.inoToCpp"
       name="%builder.ino.to.cpp"
       point="org.eclipse.core.resources.builders">
    <builder
          callOnEmptyDelta="true"
          hasNature="false"
          isConfigurable="false"
          supportsConfigurations="true">
       <run
             class="io.sloeber.core.builder.inoToCpp">
       </run>
    </builder>
 </extension>
 
    <extension
         point="org.eclipse.core.variables.dynamicVariables">
      <variable
            description="The expanded value of the key (provided in the argument) as defined in Arduino txt files (boaards/platfor/programmers) from the active configuration ."
            name="Arduino_environment_variable"
            resolver="io.sloeber.core.eclipseIntegrations.CDT_EnvironmentVariableResolver"
            supportsArgument="true">
      </variable>
   </extension>
 
</plugin>



		
		
