<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.6"?>
<plugin>
   <extension-point id="io.sloeber.autoBuild.buildDefinitions" name="sloeber autoBuild" schema="schema/buildDefinitions.exsd"/>
 
 
	<extension id="io.sloeber.autoBuild"
        point="io.sloeber.autoBuild.buildDefinitions"
		name="%extension.name.0" >
		
		<builder
        autoBuildTarget="all"
        cleanBuildTarget="clean"
        command="${MAKE_HOME}make"
        errorParsers="org.eclipse.cdt.core.MakeErrorParser"
        id="io.sloeber.autoBuild.builder"
        ignoreErrCmd="-k"
        incrementalBuildTarget="all"
        name="%autoBuild.builder.name"
        parallelBuildCmd="-j*"
        reservedMacroNames="ROOT,DEPS,OBJS,.*_SRCS,EXECUTABLES,SUBDIRS,LIBS,USER_OBJS,.*_INPUTS,.*_OUTPUTS"
        variableFormat="${=}">
  </builder>
  <projectType
        buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.compound"
        id="io.sloeber.autoBuild.projectType.exe"
        name="%autoBuild.projectType.name">
     <configuration
           cleanCommand="rm -f"
           id="io.sloeber.autoBuild.configuration.release"
           languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;org.eclipse.cdt.build.crossgcc.CrossGCCBuiltinSpecsDetector"
           name="%autoBuild.configuration.name">
        <toolChain
              archList="all"
              id="io.sloeber.autoBuild.toolChain.release"
              name="%autoBuild.tooolChain.name"
              osList="all">
           <tool
                 id="io.sloeber.autoBuild.tool.gnu.cross.assembler"
                 name="%autoBuild.tool.gcc.assembler"
                 superClass="cdt.managedbuild.tool.gnu.assembler">
           </tool>
           <tool
                 id="io.sloeber.autoBuild.tool.gnu.cross.cpp.compiler"
                 name="%autoBuild.tool.gpp.compiler"
                 superClass="cdt.managedbuild.tool.gnu.cpp.compiler">
              <outputType
                    id="io.sloeber.autoBuild.gpp.compiler.outputType.exe"
                    name="%autoBuild.outputType.CPP.exe.name"
                    namePattern="%.o"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
              <outputType
                    id="io.sloeber.autoBuild.gpp.compiler.outputType.staticLib"
                    name="%autoBuild.outputType.CPP.staticLib.name"
                    namePattern="%.o"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
              <outputType
                    id="io.sloeber.autoBuild.gpp.compiler.outputType.sharedLib"
                    name="%autoBuild.outputType.CPP.sharedLib.name"
                    namePattern="%.o"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
           </tool>
           <tool
                 id="io.sloeber.autoBuild.tool.gnu.cross.cpp.linker.staticLib"
                 name="%autoBuild.tool.gpp.linker.staticLib"
                 superClass="cdt.managedbuild.tool.gnu.archiver">
              <inputType
                    id="io.sloeber.autoBuild.inputType.staticLibs"
                    outputTypeIDs="io.sloeber.autoBuild.gpp.compiler.outputType.staticLib,io.sloeber.autoBuild.gcc.compiler.outputType.staticLib">
              </inputType>
              <outputType
                    id="io.sloeber.autoBuild.outputType.link.staticLib"
                    name="%autoBuild.outputType.staticLib.name"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
           </tool>
           <tool
                 id="io.sloeber.autoBuild.tool.gnu.cross.cpp.linker.sharedLib"
                 name="%autoBuild.tool.gpp.linker.sharedLib"
                 superClass="cdt.managedbuild.tool.gnu.cpp.linker.to.sharedLib.base">
              <inputType
                    id="io.sloeber.autoBuild.inputType.sharedLib"
                    outputTypeIDs="io.sloeber.autoBuild.gpp.compiler.outputType.sharedLib,io.sloeber.autoBuild.gcc.compiler.outputType.sharedLib">
              </inputType>
              <outputType
                    id="io.sloeber.autoBuild.outputType.link.sharedLib"
                    name="%autoBuild.outputType.sharedLib.name"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
           </tool>
           <tool
                 commandLinePattern="${TOOL_PATH}${TOOL_PREFIX}${COMMAND}${TOOL_SUFFIX} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX} ${OUTPUT} ${INPUTS} ${DYNLIBS} ${STATICLIBS}"
                 id="io.sloeber.autoBuild.tool.gnu.cross.cpp.linker.exe"
                 name="%autoBuild.tool.gpp.linker.exe"
                 superClass="cdt.managedbuild.tool.gnu.cpp.linker.to.exe.base">
              <inputType
                    assignToCommandVarriable="DYNLIBS"
                    id="io.sloeber.autoBuild.inputType.cpp.sharedLib"
                    outputTypeIDs="io.sloeber.autoBuild.outputType.link.sharedLib">
              </inputType>
              <outputType
                    id="io.sloeber.autoBuild.outputType.link.exe"
                    name="%autoBuild.outputType.exe.name"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild"
                    outputName="${ProjName}.exe">
              </outputType>
              <inputType
                    assignToCommandVarriable="STATICLIBS"
                    id="io.sloeber.autoBuild.inputType.cpp.staticLib"
                    outputTypeIDs="io.sloeber.autoBuild.outputType.link.staticLib">
              </inputType>
              <inputType
                    id="io.sloeber.autoBuild.inputType.objects"
                    outputTypeIDs="io.sloeber.autoBuild.gpp.compiler.outputType.exe,io.sloeber.autoBuild.gcc.compiler.outputType.exe">
              </inputType>
           </tool>
           <tool
                 id="io.sloeber.autoBuild.tool.gnu.cross.c.compiler"
                 name="%autoBuild.tool.gcc.compiler"
                 superClass="cdt.managedbuild.tool.gnu.c.compiler">
              <outputType
                    id="io.sloeber.autoBuild.gcc.compiler.outputType.exe"
                    name="%autoBuild.outputType.C.exe.name"
                    namePattern="%.o"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
              <outputType
                    id="io.sloeber.autoBuild.gcc.compiler.outputType.staticLib"
                    name="%autoBuild.outputType.C.staticLib.name"
                    namePattern="%.o"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
              <outputType
                    id="io.sloeber.autoBuild.gcc.compiler.outputType.sharedLib"
                    name="%autoBuild.outputType.C.sharedLib.name"
                    namePattern="%.o"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
           </tool>
           <tool
                 id="io.sloeber.autoBuild.tool.gnu.cross.c.linker.sharedLib"
                 name="%autoBuild.tool.gcc.linker.sharedLib"
                 superClass="cdt.managedbuild.tool.gnu.c.linker.to.sharedLib.base">
              <outputType
                    id="io.sloeber.autoBuild.outputType.sharedLib"
                    name="%autoBuild.outputType.sharedLib.name"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
              <inputType
                    id="io.sloeber.autoBuild.inputType.sharedLib.Object"
                    outputTypeIDs="io.sloeber.autoBuild.gcc.compiler.outputType.sharedLib,io.sloeber.autoBuild.gcc.compiler.outputType.sharedLib">
              </inputType>
           </tool>
           <tool
                 id="io.sloeber.autoBuild.tool.gnu.cross.c.linker.exe"
                 name="%autoBuild.tool.gcc.linker.exe"
                 superClass="cdt.managedbuild.tool.gnu.c.linker.to.exe.base">
              <outputType
                    id="io.sloeber.autoBuild.outputType.exe"
                    name="%autoBuild.outputType.exe.name"
                    nameProvider="io.sloeber.autoBuild.extensionPoint.providers.NameProviderAutoBuild">
              </outputType>
              <inputType
                    id="io.sloeber.autoBuild.inputTypec.exe.object"
                    outputTypeIDs="io.sloeber.autoBuild.gcc.compiler.outputType.exe,io.sloeber.autoBuild.gcc.compiler.outputType.exe">
              </inputType>
              <inputType
                    assignToCommandVarriable="DYNLIBS"
                    id="io.sloeber.autoBuild.inputType.cpp.sharedLib"
                    outputTypeIDs="io.sloeber.autoBuild.outputType.link.sharedLib">
              </inputType>
              <inputType
                    assignToCommandVarriable="STATICLIBS"
                    id="io.sloeber.autoBuild.inputType.cpp.staticLib"
                    outputTypeIDs="io.sloeber.autoBuild.outputType.link.staticLib">
              </inputType>
           </tool>
           <builder
                 id="io.sloeber.autoBuild.builder1"
                 superClass="io.sloeber.autoBuild.builder">
           </builder>
        </toolChain>
     </configuration>
  </projectType>

	</extension>

 <extension
       point="org.eclipse.cdt.make.core.MakeTargetBuilder">
    <builder
          builderID="io.sloeber.ManagedBuild.builder1"
          id="io.sloeber.ManagedBuild.builder1">
    </builder>
 </extension>
 <extension
       id="io.sloeber.autoBuildNature"
       name="auto Build Nature by Sloeber"
       point="org.eclipse.core.resources.natures">
    <runtime>
       <run
             class="io.sloeber.autoBuild.integration.AutoBuildNature">
       </run>
    </runtime>
    <builder
          id="io.sloeber.autoBuild.AutoMakeBuilder">
    </builder>
    <requires-nature
          id="org.eclipse.cdt.core.cnature">
    </requires-nature>
 </extension>
 <extension
       id="io.sloeber.autoBuild.AutoMakeBuilder"
       name="AutoBuild builder"
       point="org.eclipse.core.resources.builders">
    <builder
          callOnEmptyDelta="true"
          hasNature="true"
          isConfigurable="false"
          supportsConfigurations="true">
       <run
             class="io.sloeber.autoBuild.extensionPoint.providers.CommonBuilder">
       </run>
    </builder>
 </extension>
 <extension
       id="io.sloeber.autoBuild.ConfigurationDataProvider"
       point="org.eclipse.cdt.core.CConfigurationDataProvider">
    <provider
          class="io.sloeber.autoBuild.integration.AutoBuildConfigurationDescriptionProvider">
    </provider>
 </extension>
 
    <extension
          id="cdt.cross.gnu"
          point="io.sloeber.autoBuild.buildDefinitions">
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.gnu.cross.base"
            isAbstract="false"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.build.crossgcc.CrossGCCBuiltinSpecsDetector"
            name="%cross.gnu.toolChain.name"
            osList="all"
            targetTool="cdt.managedbuild.tool.gnu.cross.c.linker;cdt.managedbuild.tool.gnu.cross.cpp.linker;cdt.managedbuild.tool.gnu.archiver">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.targetPlatform.gnu.cross"
               isAbstract="false"
               osList="all">
         </targetPlatform>
         <builder
               id="cdt.managedbuild.builder.gnu.cross"
               superClass="cdt.managedbuild.target.gnu.builder">
         </builder>
         <optionCategory
               id="cdt.managedbuild.optionCategory.gnu.cross.settings"
               name="%cross.gnu.optionCategory.name">
         </optionCategory>
         <option
               category="cdt.managedbuild.optionCategory.gnu.cross.settings"
               id="cdt.managedbuild.option.gnu.cross.prefix"
               isAbstract="false"
               name="%cross.gnu.option.prefix"
               resourceFilter="all"
               valueType="string">
         </option>
         <option
               browseType="directory"
               category="cdt.managedbuild.optionCategory.gnu.cross.settings"
               id="cdt.managedbuild.option.gnu.cross.path"
               isAbstract="false"
               name="%cross.gnu.option.path"
               resourceFilter="all"
               valueType="string">
         </option>
         <tool
               id="cdt.managedbuild.tool.gnu.cross.c.compiler"
               isAbstract="false"
               name="%cross.gnu.tool.gcc.compiler"
               superClass="cdt.managedbuild.tool.gnu.c.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cross.cpp.compiler"
               isAbstract="false"
               name="%cross.gnu.tool.gpp.compiler"
               superClass="cdt.managedbuild.tool.gnu.cpp.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cross.c.linker"
               isAbstract="false"
               name="%cross.gnu.tool.gcc.linker"
               superClass="cdt.managedbuild.tool.gnu.c.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cross.cpp.linker"
               isAbstract="false"
               name="%cross.gnu.tool.gpp.linker"
               superClass="cdt.managedbuild.tool.gnu.cpp.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cross.archiver"
               isAbstract="false"
               name="%cross.gnu.tool.gcc.archiver"
               superClass="cdt.managedbuild.tool.gnu.archiver">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cross.assembler"
               isAbstract="false"
               name="%cross.gnu.tool.gcc.assembler"
               superClass="cdt.managedbuild.tool.gnu.assembler">
         </tool>
      </toolChain>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.gnu.cross.exe"
            isAbstract="false"
            isTest="false"
            name="gnu_cross_exe">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cross.exe.debug"
               name="Debug"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cross.exe.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cross.exe.release"
               name="Release"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cross.exe.release"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.gnu.cross.so"
            isAbstract="false"
            isTest="false"
            name="gnu_cross_shared_lib">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cross.so.debug"
               name="Debug"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cross.so.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cross.so.release"
               name="Release"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cross.so.release"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.gnu.cross.lib"
            isAbstract="false"
            isTest="false"
            name="gnu_cross_static_lib">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cross.lib.debug"
               name="Debug"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cross.lib.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cross.lib.release"
               name="Release"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cross.lib.release"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
            </toolChain>
         </configuration>
      </projectType>
   </extension>
            <extension
         id="cdt.managed.build.info"
         name="%extension.name"
         point="io.sloeber.autoBuild.buildDefinitions">
      <managedBuildRevision
            fileVersion="4.0.0">
      </managedBuildRevision>
      <tool
            command="gcc"
            errorParsers="org.eclipse.cdt.core.GLDErrorParser"
            id="cdt.managedbuild.tool.gnu.c.linker"
            name="%ToolName.linker.gnu.c"
            natureFilter="cnature"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.exe">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathLibrary"
               variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <optionCategory
               id="gnu.c.link.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.gnu.c.linker">
         </optionCategory>
         <option
               category="gnu.c.link.category.general"
               command="-nostartfiles"
               defaultValue="false"
               id="gnu.c.link.option.nostart"
               name="%Option.Posix.Linker.NoStartFiles"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.link.category.general"
               command="-nodefaultlibs"
               defaultValue="false"
               id="gnu.c.link.option.nodeflibs"
               name="%Option.Posix.Linker.NoDefLibs"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.link.category.general"
               command="-nostdlib"
               defaultValue="false"
               id="gnu.c.link.option.nostdlibs"
               name="%Option.Posix.Linker.NoStdLibs"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.link.category.general"
               command="-s"
               defaultValue="false"
               id="gnu.c.link.option.strip"
               name="%Option.Posix.Linker.Strip"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.link.category.general"
               command="-static"
               defaultValue="false"
               id="gnu.c.link.option.noshared"
               name="%Option.Posix.Linker.Static"
               valueType="boolean">
         </option>
         <optionCategory
               id="gnu.c.link.category.libs"
               name="%OptionCategory.Libs"
               owner="cdt.managedbuild.tool.gnu.c.linker">
         </optionCategory>
         <option
               browseType="none"
               category="gnu.c.link.category.libs"
               command="-l"
               id="gnu.c.link.option.libs"
               name="%Option.Posix.Libs"
               valueType="libs">
         </option>
         <option
               browseType="directory"
               category="gnu.c.link.category.libs"
               command="-L"
               id="gnu.c.link.option.paths"
               name="%Option.Posix.Libsearch"
               valueType="libPaths">
         </option>
         <optionCategory
               id="gnu.c.link.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.gnu.c.linker">
         </optionCategory>
         <option
               category="gnu.c.link.category.other"
               id="gnu.c.link.option.ldflags"
               name="%Option.Posix.Linker.Flags"
               valueType="string">
         </option>
         <option
               category="gnu.c.link.category.other"
               command="-Xlinker ${VALUE}"
               id="gnu.c.link.option.other"
               name="%Option.Posix.Linker.XLinker"
               valueType="stringList">
         </option>
         <option
               browseType="file"
               category="gnu.c.link.category.other"
               id="gnu.c.link.option.userobjs"
               name="%Option.Posix.UserObjs"
               valueType="userObjs">
         </option>
         <optionCategory
               id="gnu.c.link.category.shared"
               name="%OptionCategory.Shared.Settings"
               owner="cdt.managedbuild.tool.gnu.c.linker">
         </optionCategory>
         <option
               category="gnu.c.link.category.shared"
               command="-Wl,-soname="
               id="gnu.c.link.option.soname"
               name="%Option.Posix.Linker.SOName"
               valueType="string">
         </option>
         <option
               category="gnu.c.link.category.shared"
               command="-Wl,--out-implib="
               id="gnu.c.link.option.implname"
               name="%Option.Posix.Linker.Implib"
               valueType="string">
         </option>
         <option
               category="gnu.c.link.category.shared"
               command="-Wl,--output-def="
               id="gnu.c.link.option.defname"
               name="%Option.Posix.Linker.Defname"
               valueType="string">
         </option>
         <inputType
               id="cdt.managedbuild.tool.gnu.c.linker.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="EXECUTABLES"
               id="cdt.managedbuild.tool.gnu.c.linker.output"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputName="${ProjName}.exe">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="gnu.c.link.option.shared"
                     value="false">
               </checkOption>
            </enablement>
         </outputType>
         <outputType
               buildVariable="LIBRARIES"
               id="cdt.managedbuild.tool.gnu.c.linker.output.so"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputName="lib_${ProjName}.so">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="gnu.c.link.option.shared"
                     value="true">
               </checkOption>
            </enablement>
         </outputType>
         <option
               command="-p"
               defaultValue="false"
               id="gnu.c.link.option.debugging.prof"
               name="%Option.Posix.Debug.prof"
               valueType="boolean">
         </option>
         <option
               command="-pg"
               defaultValue="false"
               id="gnu.c.link.option.debugging.gprof"
               name="%Option.Posix.Debug.gprof"
               valueType="boolean">
         </option>
         <option
               command="-ftest-coverage -fprofile-arcs"
               defaultValue="false"
               id="gnu.c.link.option.debugging.codecov"
               name="%Option.codecov"
               valueType="boolean">
         </option>
      </tool>
      <tool
            command="g++"
            errorParsers="org.eclipse.cdt.core.GLDErrorParser"
            id="cdt.managedbuild.tool.gnu.cpp.linker"
            name="%ToolName.linker.gnu.cpp"
            natureFilter="ccnature"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.exe">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathLibrary"
               variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <optionCategory
               id="gnu.cpp.link.category.options"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.gnu.cpp.linker">
         </optionCategory>
         <option
               category="gnu.cpp.link.category.options"
               command="-nostartfiles"
               defaultValue="false"
               id="gnu.cpp.link.option.nostart"
               name="%Option.Posix.Linker.NoStartFiles"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.link.category.options"
               command="-nodefaultlibs"
               defaultValue="false"
               id="gnu.cpp.link.option.nodeflibs"
               name="%Option.Posix.Linker.NoDefLibs"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.link.category.options"
               command="-nostdlib"
               defaultValue="false"
               id="gnu.cpp.link.option.nostdlibs"
               name="%Option.Posix.Linker.NoStdLibs"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.link.category.options"
               command="-s"
               defaultValue="false"
               id="gnu.cpp.link.option.strip"
               name="%Option.Posix.Linker.Strip"
               valueType="boolean">
         </option>
         <optionCategory
               id="gnu.cpp.link.category.libs"
               name="%OptionCategory.Libs"
               owner="cdt.managedbuild.tool.gnu.cpp.linker">
         </optionCategory>
         <option
               browseType="none"
               category="gnu.cpp.link.category.libs"
               command="-l"
               id="gnu.cpp.link.option.libs"
               name="%Option.Posix.Libs"
               valueType="libs">
         </option>
         <option
               browseType="directory"
               category="gnu.cpp.link.category.libs"
               command="-L"
               id="gnu.cpp.link.option.paths"
               name="%Option.Posix.Libsearch"
               valueType="libPaths">
         </option>
         <optionCategory
               id="gnu.cpp.link.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.gnu.cpp.linker">
         </optionCategory>
         <option
               category="gnu.cpp.link.category.other"
               id="gnu.cpp.link.option.flags"
               name="%Option.Posix.Linker.Flags"
               valueType="string">
         </option>
         <option
               category="gnu.cpp.link.category.other"
               command="-Xlinker ${VALUE}"
               id="gnu.cpp.link.option.other"
               name="%Option.Posix.Linker.XLinker"
               valueType="stringList">
         </option>
         <option
               browseType="file"
               category="gnu.cpp.link.category.other"
               id="gnu.cpp.link.option.userobjs"
               name="%Option.Posix.UserObjs"
               valueType="userObjs">
         </option>
         <optionCategory
               id="gnu.cpp.link.category.shared"
               name="%OptionCategory.Shared.Settings"
               owner="cdt.managedbuild.tool.gnu.cpp.linker">
         </optionCategory>
         <option
               category="gnu.cpp.link.category.shared"
               command="-Wl,-soname="
               id="gnu.cpp.link.option.soname"
               name="%Option.Posix.Linker.SOName"
               valueType="string">
         </option>
         <option
               category="gnu.cpp.link.category.shared"
               command="-Wl,--out-implib="
               id="gnu.cpp.link.option.implname"
               name="%Option.Posix.Linker.Implib"
               valueType="string">
         </option>
         <option
               category="gnu.cpp.link.category.shared"
               command="-Wl,--output-def="
               id="gnu.cpp.link.option.defname"
               name="%Option.Posix.Linker.Defname"
               valueType="string">
         </option>
         <inputType
               id="cdt.managedbuild.tool.gnu.cpp.linker.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="EXECUTABLES"
               id="cdt.managedbuild.tool.gnu.cpp.linker.output"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputName="${ProjName}.exe">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="gnu.cpp.link.option.shared"
                     value="false">
               </checkOption>
            </enablement>
         </outputType>
         <outputType
               buildVariable="LIBRARIES"
               id="cdt.managedbuild.tool.gnu.cpp.linker.output.so"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputExtension="so"
               outputName="lib_${ProjName}.so"
               outputPrefix="lib">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="gnu.cpp.link.option.shared"
                     value="true">
               </checkOption>
            </enablement>
         </outputType>
         <option
               command="-p"
               defaultValue="false"
               id="gnu.cpp.link.option.debugging.prof"
               name="%Option.Posix.Debug.prof"
               valueType="boolean">
         </option>
         <option
               command="-pg"
               defaultValue="false"
               id="gnu.cpp.link.option.debugging.gprof"
               name="%Option.Posix.Debug.gprof"
               valueType="boolean">
         </option>
         <option
               command="-ftest-coverage -fprofile-arcs"
               defaultValue="false"
               id="gnu.cpp.link.option.debugging.codecov"
               name="%Option.codecov"
               valueType="boolean">
         </option>
      </tool>
      <tool
            command="ar"
            id="cdt.managedbuild.tool.gnu.archiver"
            isAbstract="true"
            name="%ToolName.archiver.gnu"
            natureFilter="both">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </value>
            </property>
         </supportedProperties>
         <optionCategory
               id="gnu.lib.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.gnu.archiver">
         </optionCategory>
         <option
               category="gnu.lib.category.general"
               id="gnu.both.lib.option.flags"
               name="%Option.Posix.Archiver.Flags"
               valueType="string">
         </option>
         <inputType
               id="cdt.managedbuild.tool.gnu.archiver.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="ARCHIVES"
               id="cdt.managedbuild.tool.gnu.archiver.output"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputName="lib_${ProjName}.a">
         </outputType>
         <option
               category="gnu.lib.category.general"
               defaultValue="-crs"
               id="gnu.both.lib.required.flags"
               name="Required flags"
               valueType="string">
            <enablement
                  type="CMD_USAGE">
            </enablement>
         </option>
      </tool>
      <tool
            command="as"
            errorParsers="org.eclipse.cdt.core.GASErrorParser"
            id="cdt.managedbuild.tool.gnu.assembler"
            name="%ToolName.assembler.gnu"
            natureFilter="both"
            outputFlag="-o">
         <optionCategory
               id="gnu.asm.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.gnu.assembler">
         </optionCategory>
         <option
               category="gnu.asm.category.general"
               id="gnu.both.asm.option.flags"
               name="%Option.Gnu.Assembler.Flags"
               valueType="string">
         </option>
         <option
               browseType="directory"
               category="gnu.asm.category.general"
               command="-I"
               id="gnu.both.asm.option.include.paths"
               name="%Option.Posix.InclPaths"
               valueType="includePath">
         </option>
         <option
               category="gnu.asm.category.general"
               command="-W"
               defaultValue="false"
               id="gnu.both.asm.option.warnings.nowarn"
               name="%Option.Gnu.Assembler.warn.suppress"
               valueType="boolean">
         </option>
         <option
               category="gnu.asm.category.general"
               command="-v"
               defaultValue="false"
               id="gnu.both.asm.option.version"
               name="%Option.Gnu.Assembler.version"
               valueType="boolean">
         </option>
         <inputType
               id="cdt.managedbuild.tool.gnu.assembler.input"
               languageId="org.eclipse.cdt.core.assembly"
               sourceContentType="org.eclipse.cdt.core.asmSource">
         </inputType>
         <outputType
               buildVariable="OBJS"
               id="cdt.managedbuild.tool.gnu.assembler.output"
               outputExtension="o">
         </outputType>
      </tool>
      <tool
            command="gcc"
            errorParsers="org.eclipse.cdt.core.GLDErrorParser"
            id="cdt.managedbuild.tool.macosx.c.linker"
            name="%ToolName.linker.macosx.c"
            natureFilter="cnature"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.exe">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathLibrary"
               variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <optionCategory
               id="macosx.c.link.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.macosx.c.linker">
         </optionCategory>
         <option
               category="macosx.c.link.category.general"
               command="-nostartfiles"
               defaultValue="false"
               id="macosx.c.link.option.nostart"
               name="%Option.Posix.Linker.NoStartFiles"
               valueType="boolean">
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="true">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="macosx.c.link.category.general"
               command="-nodefaultlibs"
               defaultValue="false"
               id="macosx.c.link.option.nodeflibs"
               name="%Option.Posix.Linker.NoDefLibs"
               valueType="boolean">
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="true">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="macosx.c.link.category.general"
               command="-nostdlib"
               defaultValue="false"
               id="macosx.c.link.option.nostdlibs"
               name="%Option.Posix.Linker.NoStdLibs"
               valueType="boolean">
         </option>
         <option
               category="macosx.c.link.category.general"
               command="-s"
               defaultValue="false"
               id="macosx.c.link.option.strip"
               name="%Option.Posix.Linker.Strip"
               valueType="boolean">
         </option>
         <option
               category="macosx.c.link.category.general"
               command="-static"
               defaultValue="false"
               id="macosx.c.link.option.noshared"
               name="%Option.Posix.Linker.Static"
               valueType="boolean">
         </option>
         <optionCategory
               id="macosx.c.link.category.libs"
               name="%OptionCategory.Libs"
               owner="cdt.managedbuild.tool.macosx.c.linker">
         </optionCategory>
         <option
               browseType="none"
               category="macosx.c.link.category.libs"
               command="-l"
               id="macosx.c.link.option.libs"
               name="%Option.Posix.Libs"
               valueType="libs">
         </option>
         <option
               browseType="directory"
               category="macosx.c.link.category.libs"
               command="-L"
               id="macosx.c.link.option.paths"
               name="%Option.Posix.Libsearch"
               valueType="libPaths">
         </option>
         <optionCategory
               id="macosx.c.link.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.macosx.c.linker">
         </optionCategory>
         <option
               category="macosx.c.link.category.other"
               id="macosx.c.link.option.ldflags"
               name="%Option.Posix.Linker.Flags"
               valueType="string">
         </option>
         <option
               category="macosx.c.link.category.other"
               command="-Xlinker ${VALUE}"
               id="macosx.c.link.option.other"
               name="%Option.Posix.Linker.XLinker"
               valueType="stringList">
         </option>
         <option
               browseType="file"
               category="macosx.c.link.category.other"
               id="macosx.c.link.option.userobjs"
               name="%Option.Posix.UserObjs"
               valueType="userObjs">
         </option>
         <optionCategory
               id="macosx.c.link.category.shared"
               name="%OptionCategory.Shared.Settings"
               owner="cdt.managedbuild.tool.macosx.c.linker">
         </optionCategory>
         <option
               category="macosx.c.link.category.shared"
               command="-dynamiclib"
               defaultValue="false"
               id="macosx.c.link.option.shared"
               name="%Option.MacOSX.Linker.Shared"
               valueType="boolean">
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="true">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </checkBuildProperty>
            </enablement>
         </option>
         <inputType
               id="cdt.managedbuild.tool.macosx.c.linker.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="EXECUTABLES"
               id="cdt.managedbuild.tool.macosx.c.linker.output"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputName="${ProjName}.exe">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="macosx.c.link.option.shared"
                     value="false">
               </checkOption>
            </enablement>
         </outputType>
         <outputType
               buildVariable="LIBRARIES"
               id="cdt.managedbuild.tool.macosx.c.linker.output.so"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputName="lib_${ProjName}.dylib">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="macosx.c.link.option.shared"
                     value="true">
               </checkOption>
            </enablement>
         </outputType>
      </tool>
      <tool
            command="g++"
            errorParsers="org.eclipse.cdt.core.GLDErrorParser"
            id="cdt.managedbuild.tool.macosx.cpp.linker"
            name="%ToolName.linker.macosx.cpp"
            natureFilter="ccnature"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.exe">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathLibrary"
               variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <optionCategory
               id="macosx.cpp.link.category.options"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.macosx.cpp.linker">
         </optionCategory>
         <option
               category="macosx.cpp.link.category.options"
               command="-nostartfiles"
               defaultValue="false"
               id="macosx.cpp.link.option.nostart"
               name="%Option.Posix.Linker.NoStartFiles"
               valueType="boolean">
         </option>
         <option
               category="macosx.cpp.link.category.options"
               command="-nodefaultlibs"
               defaultValue="false"
               id="macosx.cpp.link.option.nodeflibs"
               name="%Option.Posix.Linker.NoDefLibs"
               valueType="boolean">
         </option>
         <option
               category="macosx.cpp.link.category.options"
               command="-nostdlib"
               defaultValue="false"
               id="macosx.cpp.link.option.nostdlibs"
               name="%Option.Posix.Linker.NoStdLibs"
               valueType="boolean">
         </option>
         <option
               category="macosx.cpp.link.category.options"
               command="-s"
               defaultValue="false"
               id="macosx.cpp.link.option.strip"
               name="%Option.Posix.Linker.Strip"
               valueType="boolean">
         </option>
         <optionCategory
               id="macosx.cpp.link.category.libs"
               name="%OptionCategory.Libs"
               owner="cdt.managedbuild.tool.macosx.cpp.linker">
         </optionCategory>
         <option
               browseType="none"
               category="macosx.cpp.link.category.libs"
               command="-l"
               id="macosx.cpp.link.option.libs"
               name="%Option.Posix.Libs"
               valueType="libs">
         </option>
         <option
               browseType="directory"
               category="macosx.cpp.link.category.libs"
               command="-L"
               id="macosx.cpp.link.option.paths"
               name="%Option.Posix.Libsearch"
               valueType="libPaths">
         </option>
         <optionCategory
               id="macosx.cpp.link.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.macosx.cpp.linker">
         </optionCategory>
         <option
               category="macosx.cpp.link.category.other"
               id="macosx.cpp.link.option.flags"
               name="%Option.Posix.Linker.Flags"
               valueType="string">
         </option>
         <option
               category="macosx.cpp.link.category.other"
               command="-Xlinker ${VALUE}"
               id="macosx.cpp.link.option.other"
               name="%Option.Posix.Linker.XLinker"
               valueType="stringList">
         </option>
         <option
               browseType="file"
               category="macosx.cpp.link.category.other"
               id="macosx.cpp.link.option.userobjs"
               name="%Option.Posix.UserObjs"
               valueType="userObjs">
         </option>
         <optionCategory
               id="macosx.cpp.link.category.shared"
               name="%OptionCategory.Shared.Settings"
               owner="cdt.managedbuild.tool.macosx.cpp.linker">
         </optionCategory>
         <option
               category="macosx.cpp.link.category.shared"
               command="-dynamiclib"
               defaultValue="false"
               id="macosx.cpp.link.option.shared"
               name="%Option.MacOSX.Linker.Shared"
               valueType="boolean">
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="true">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </checkBuildProperty>
            </enablement>
         </option>
         <inputType
               id="cdt.managedbuild.tool.macosx.cpp.linker.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="EXECUTABLES"
               id="cdt.managedbuild.tool.macosx.cpp.linker.output"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputName="${ProjName}.exe">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="macosx.cpp.link.option.shared"
                     value="false">
               </checkOption>
            </enablement>
         </outputType>
         <outputType
               buildVariable="LIBRARIES"
               id="cdt.managedbuild.tool.macosx.cpp.linker.output.so"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputName="lib_${ProjName}.dylib">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="macosx.cpp.link.option.shared"
                     value="true">
               </checkOption>
            </enablement>
         </outputType>
      </tool>
      <tool
            command="gcc"
            dependencyGenerationFlag="-MMD -MP -MF&quot;${%.d}&quot; -MT&quot;$@&quot; "
            dependencyOutputPattern="%.d"
            errorParsers="org.eclipse.cdt.core.GCCErrorParser"
            id="cdt.managedbuild.tool.gnu.c.compiler"
            isAbstract="true"
            name="%ToolName.compiler.gnu.c"
            natureFilter="both"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildType">
               <value
                     id="org.eclipse.cdt.build.core.buildType.debug">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildType.release">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathInclude"
               variableList="CPATH,C_INCLUDE_PATH">
         </envVarBuildPath>
         <optionCategory
               id="gnu.c.compiler.category.dialect"
               name="%OptionCategory.Dialect"
               owner="cdt.managedbuild.tool.gnu.c.compiler">
         </optionCategory>
         <option
               category="gnu.c.compiler.category.dialect"
               defaultValue="false"
               id="gnu.c.compiler.option.dialect.std"
               name="%Option.Posix.Dialect"
               useByScannerDiscovery="true"
               valueType="enumerated">
            <enumeratedOptionValue
                  id="gnu.c.compiler.dialect.default"
                  name="%Option.Posix.Dialect.default">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-std=c90"
                  id="gnu.c.compiler.dialect.c90"
                  name="%Option.Posix.Dialect.c90">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-std=c99"
                  id="gnu.c.compiler.dialect.c99"
                  name="%Option.Posix.Dialect.c99">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-std=c11"
                  id="gnu.c.compiler.dialect.c11"
                  name="%Option.Posix.Dialect.c11">
            </enumeratedOptionValue>
         </option>
         <option
               category="gnu.c.compiler.category.dialect"
               id="gnu.c.compiler.option.dialect.flags"
               name="%Option.Posix.Dialect.Flags"
               useByScannerDiscovery="true"
               valueType="string">
         </option>
         <optionCategory
               id="gnu.c.compiler.category.preprocessor"
               name="%OptionCategory.Preproc"
               owner="cdt.managedbuild.tool.gnu.c.compiler">
         </optionCategory>
         <option
               category="gnu.c.compiler.category.preprocessor"
               command="-nostdinc"
               defaultValue="false"
               id="gnu.c.compiler.option.preprocessor.nostdinc"
               name="%Option.Posix.Nostdinc"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.preprocessor"
               command="-E"
               defaultValue="false"
               id="gnu.c.compiler.option.preprocessor.preprocess"
               name="%Option.Posix.PreprocOnly"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.preprocessor"
               command="-D"
               id="gnu.c.compiler.option.preprocessor.def.symbols"
               name="%Option.Posix.DefSym"
               valueType="definedSymbols">
         </option>
         <option
               category="gnu.c.compiler.category.preprocessor"
               command="-U"
               id="gnu.c.compiler.option.preprocessor.undef.symbol"
               name="%Option.Posix.UndefSym"
               valueType="undefDefinedSymbols">
         </option>
         <optionCategory
               id="gnu.c.compiler.category.dirs"
               name="%OptionCategory.Dirs"
               owner="cdt.managedbuild.tool.gnu.c.compiler">
         </optionCategory>
         <option
               browseType="directory"
               category="gnu.c.compiler.category.dirs"
               command="-I"
               id="gnu.c.compiler.option.include.paths"
               name="%Option.Posix.InclPaths"
               valueType="includePath">
         </option>
         <option
               browseType="file"
               category="gnu.c.compiler.category.dirs"
               command="-include"
               id="gnu.c.compiler.option.include.files"
               name="%Option.Posix.InclFiles"
               valueType="includeFiles">
         </option>
         <optionCategory
               id="gnu.c.compiler.category.optimization"
               name="%OptionCategory.Optimize"
               owner="cdt.managedbuild.tool.gnu.c.compiler">
         </optionCategory>
         <option
               category="gnu.c.compiler.category.optimization"
               id="gnu.c.compiler.option.optimization.level"
               name="%Option.Posix.OptLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  command="-O0"
                  id="gnu.c.optimization.level.none"
                  isDefault="false"
                  name="%Option.Posix.Optimize.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O1"
                  id="gnu.c.optimization.level.optimize"
                  name="%Option.Posix.Optimize.Optimize">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O2"
                  id="gnu.c.optimization.level.more"
                  isDefault="true"
                  name="%Option.Posix.Optimize.More">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O3"
                  id="gnu.c.optimization.level.most"
                  name="%Option.Posix.Optimize.Most">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-Os"
                  id="gnu.c.optimization.level.size"
                  name="%Option.Posix.Optimize.Size">
            </enumeratedOptionValue>
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="gnu.c.optimization.level.most">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="gnu.c.optimization.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="gnu.c.compiler.category.optimization"
               id="gnu.c.compiler.option.optimization.flags"
               name="%Option.Posix.Optimize.Flags"
               valueType="string">
         </option>
         <optionCategory
               id="gnu.c.compiler.category.debug"
               name="%OptionCategory.Debug"
               owner="cdt.managedbuild.tool.gnu.c.compiler">
         </optionCategory>
         <option
               category="gnu.c.compiler.category.debug"
               id="gnu.c.compiler.option.debugging.level"
               name="%Option.Posix.DebugLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  id="gnu.c.debugging.level.none"
                  isDefault="false"
                  name="%Option.Posix.Debug.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g1"
                  id="gnu.c.debugging.level.minimal"
                  name="%Option.Posix.Debug.Min">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g"
                  id="gnu.c.debugging.level.default"
                  isDefault="true"
                  name="%Option.Posix.Debug.Def">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g3"
                  id="gnu.c.debugging.level.max"
                  isDefault="false"
                  name="%Option.Posix.Debug.Max">
            </enumeratedOptionValue>
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="gnu.c.debugging.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="gnu.c.debugging.level.max">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="gnu.c.compiler.category.debug"
               id="gnu.c.compiler.option.debugging.other"
               name="%Option.Posix.Debug.Other"
               valueType="string">
         </option>
         <option
               category="gnu.c.compiler.category.debug"
               command="-p"
               defaultValue="false"
               id="gnu.c.compiler.option.debugging.prof"
               name="%Option.Posix.Debug.prof"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.debug"
               command="-pg"
               defaultValue="false"
               id="gnu.c.compiler.option.debugging.gprof"
               name="%Option.Posix.Debug.gprof"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.debug"
               command="-ftest-coverage -fprofile-arcs"
               defaultValue="false"
               id="gnu.c.compiler.option.debugging.codecov"
               name="%Option.codecov"
               tip="%Option.codecovTip"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.debug"
               command="-fsanitize=address"
               defaultValue="false"
               id="gnu.c.compiler.option.debugging.sanitaddress"
               name="%Option.Posix.Debug.sanitaddress"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.debug"
               command="-fsanitize=pointer-compare -fsanitize=pointer-subtract"
               defaultValue="false"
               id="gnu.c.compiler.option.debugging.sanitpointers"
               name="%Option.Posix.Debug.sanitpointers"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.debug"
               command="-fsanitize=thread"
               defaultValue="false"
               id="gnu.c.compiler.option.debugging.sanitthread"
               name="%Option.Posix.Debug.sanitthread"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.debug"
               command="-fsanitize=leak"
               defaultValue="false"
               id="gnu.c.compiler.option.debugging.sanitleak"
               name="%Option.Posix.Debug.sanitleak"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.debug"
               command="-fsanitize=undefined"
               defaultValue="false"
               id="gnu.c.compiler.option.debugging.sanitundef"
               name="%Option.Posix.Debug.sanitundefined"
               valueType="boolean">
         </option>
         <optionCategory
               id="gnu.c.compiler.category.warnings"
               name="%OptionCategory.Warn"
               owner="cdt.managedbuild.tool.gnu.c.compiler">
         </optionCategory>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-fsyntax-only"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.syntax"
               name="%Option.Posix.Warn.Syntax"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-pedantic"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.pedantic"
               name="%Option.Posix.Warn.Pedandic"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-pedantic-errors"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.pedantic.error"
               name="%Option.Posix.Warn.PedErrors"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-w"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.nowarn"
               name="%Option.Posix.Warn.nowarn"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wall"
               defaultValue="true"
               id="gnu.c.compiler.option.warnings.allwarn"
               name="%Option.Posix.Warn.allwarn"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wextra"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.extrawarn"
               name="%Option.Posix.Warn.extrawarn"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Werror"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.toerrors"
               name="%Option.Posix.Warn.toerrs"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wconversion"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wconversion"
               name="%Option.Posix.Warn.wconversion"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wcast-align"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wcastalign"
               name="%Option.Posix.Warn.wcastalign"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wcast-qual"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wcastqual"
               name="%Option.Posix.Warn.wcastqual"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wdisabled-optimization"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wdisabledopt"
               name="%Option.Posix.Warn.wdisabledopt"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wlogical-op"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wlogicalop"
               name="%Option.Posix.Warn.wlogicalop"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wmissing-declarations"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wmissingdecl"
               name="%Option.Posix.Warn.wmissingdecl"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wmissing-include-dirs"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wmissingincdir"
               name="%Option.Posix.Warn.wmissingincdir"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wredundant-decls"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wredundantdecl"
               name="%Option.Posix.Warn.wredundantdecl"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wshadow"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wshadow"
               name="%Option.Posix.Warn.wshadow"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wsign-conversion"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wsignconv"
               name="%Option.Posix.Warn.wsignconv"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wswitch-default"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wswitchdef"
               name="%Option.Posix.Warn.wswitchdef"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wundef"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wundef"
               name="%Option.Posix.Warn.wundef"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wwrite-strings"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wwritestrings"
               name="%Option.Posix.Warn.wwritestring"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.warnings"
               command="-Wfloat-equal"
               defaultValue="false"
               id="gnu.c.compiler.option.warnings.wfloatequal"
               name="%Option.Posix.Warn.wfloatequal"
               valueType="boolean">
         </option>
         <optionCategory
               id="gnu.c.compiler.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.gnu.c.compiler">
         </optionCategory>
         <option
               category="gnu.c.compiler.category.other"
               defaultValue="-c -fmessage-length=0"
               id="gnu.c.compiler.option.misc.other"
               name="%Option.OtherFlags"
               valueType="string">
            <enablement
                  type="CMD_USAGE">
            </enablement>
         </option>
         <option
               category="gnu.c.compiler.category.other"
               command="-v"
               defaultValue="false"
               id="gnu.c.compiler.option.misc.verbose"
               name="%Option.Posix.Verbose"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.other"
               command="-ansi"
               defaultValue="false"
               id="gnu.c.compiler.option.misc.ansi"
               name="%Option.Posix.Ansi"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.other"
               command="-fPIC"
               defaultValue="false"
               id="gnu.c.compiler.option.misc.pic"
               name="%Option.PIC"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.other"
               command="-fstack-protector-all -Wformat=2 -Wformat-security -Wstrict-overflow"
               defaultValue="false"
               id="gnu.c.compiler.option.misc.hardening"
               name="%Option.Security"
               valueType="boolean">
         </option>
         <option
               category="gnu.c.compiler.category.other"
               command="-fPIE"
               defaultValue="false"
               id="gnu.c.compiler.option.misc.randomization"
               name="%Option.Randomization"
               valueType="boolean">
         </option>
         <inputType
               id="cdt.managedbuild.tool.gnu.c.compiler.input"
               languageId="org.eclipse.cdt.core.gcc"
               sourceContentType="org.eclipse.cdt.core.cSource">
         </inputType>
         <outputType
               buildVariable="OBJS"
               id="cdt.managedbuild.tool.gnu.c.compiler.output"
               namePattern="%.o">
         </outputType>
      </tool>
      <tool
            command="g++"
            dependencyGenerationFlag="-MMD -MP -MF&quot;${%.d}&quot; -MT&quot;$@&quot; "
            dependencyOutputPattern="%.d"
            errorParsers="org.eclipse.cdt.core.GCCErrorParser"
            id="cdt.managedbuild.tool.gnu.cpp.compiler"
            isAbstract="true"
            name="%ToolName.compiler.gnu.cpp"
            natureFilter="ccnature"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildType">
               <value
                     id="org.eclipse.cdt.build.core.buildType.debug">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildType.release">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathInclude"
               variableList="CPATH,CPLUS_INCLUDE_PATH">
         </envVarBuildPath>
         <optionCategory
               id="gnu.cpp.compiler.category.dialect"
               name="%OptionCategory.Dialect"
               owner="cdt.managedbuild.tool.gnu.cpp.compiler">
         </optionCategory>
         <option
               category="gnu.cpp.compiler.category.dialect"
               defaultValue="false"
               id="gnu.cpp.compiler.option.dialect.std"
               name="%Option.Posix.Dialect"
               useByScannerDiscovery="true"
               valueType="enumerated">
            <enumeratedOptionValue
                  id="gnu.cpp.compiler.dialect.default"
                  name="%Option.Posix.Dialect.default">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-std=c++98"
                  id="gnu.cpp.compiler.dialect.c++98"
                  name="%Option.Posix.Dialect.c++98">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-std=c++0x"
                  id="gnu.cpp.compiler.dialect.c++11"
                  name="%Option.Posix.Dialect.c++11">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-std=c++1y"
                  id="gnu.cpp.compiler.dialect.c++1y"
                  name="%Option.Posix.Dialect.c++14">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-std=c++17"
                  id="gnu.cpp.compiler.dialect.c++17"
                  name="%Option.Posix.Dialect.c++17">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-std=c++2a"
                  id="gnu.cpp.compiler.dialect.c++2a"
                  name="%Option.Posix.Dialect.c++2a">
            </enumeratedOptionValue>
         </option>
         <option
               category="gnu.cpp.compiler.category.dialect"
               id="gnu.cpp.compiler.option.dialect.flags"
               name="%Option.Posix.Dialect.Flags"
               useByScannerDiscovery="true"
               valueType="string">
         </option>
         <optionCategory
               id="gnu.cpp.compiler.category.preprocessor"
               name="%OptionCategory.Preproc"
               owner="cdt.managedbuild.tool.gnu.cpp.compiler">
         </optionCategory>
         <option
               category="gnu.cpp.compiler.category.preprocessor"
               command="-nostdinc"
               defaultValue="false"
               id="gnu.cpp.compiler.option.preprocessor.nostdinc"
               name="%Option.Posix.Nostdinc"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.preprocessor"
               command="-E"
               defaultValue="false"
               id="gnu.cpp.compiler.option.preprocessor.preprocess"
               name="%Option.Posix.PreprocOnly"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.preprocessor"
               command="-D"
               id="gnu.cpp.compiler.option.preprocessor.def"
               name="%Option.Posix.DefSym"
               valueType="definedSymbols">
         </option>
         <option
               category="gnu.cpp.compiler.category.preprocessor"
               command="-U"
               id="gnu.cpp.compiler.option.preprocessor.undef"
               name="%Option.Posix.UndefSym"
               valueType="undefDefinedSymbols">
         </option>
         <optionCategory
               id="gnu.cpp.compiler.category.dirs"
               name="%OptionCategory.Dirs"
               owner="cdt.managedbuild.tool.gnu.cpp.compiler">
         </optionCategory>
         <option
               browseType="directory"
               category="gnu.cpp.compiler.category.dirs"
               command="-I"
               id="gnu.cpp.compiler.option.include.paths"
               name="%Option.Posix.InclPaths"
               valueType="includePath">
         </option>
         <option
               browseType="file"
               category="gnu.cpp.compiler.category.dirs"
               command="-include"
               id="gnu.cpp.compiler.option.include.files"
               name="%Option.Posix.InclFiles"
               valueType="includeFiles">
         </option>
         <optionCategory
               id="gnu.cpp.compiler.category.optimization"
               name="%OptionCategory.Optimize"
               owner="cdt.managedbuild.tool.gnu.cpp.compiler">
         </optionCategory>
         <option
               category="gnu.cpp.compiler.category.optimization"
               id="gnu.cpp.compiler.option.optimization.level"
               name="%Option.Posix.OptLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  command="-O0"
                  id="gnu.cpp.compiler.optimization.level.none"
                  name="%Option.Posix.Optimize.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O1"
                  id="gnu.cpp.compiler.optimization.level.optimize"
                  name="%Option.Posix.Optimize.Optimize">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O2"
                  id="gnu.cpp.compiler.optimization.level.more"
                  isDefault="true"
                  name="%Option.Posix.Optimize.More">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O3"
                  id="gnu.cpp.compiler.optimization.level.most"
                  name="%Option.Posix.Optimize.Most">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-Os"
                  id="gnu.cpp.compiler.optimization.level.size"
                  name="%Option.Posix.Optimize.Size">
            </enumeratedOptionValue>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="gnu.cpp.compiler.optimization.level.most">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="gnu.cpp.compiler.optimization.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="gnu.cpp.compiler.category.optimization"
               id="gnu.cpp.compiler.option.optimization.flags"
               name="%Option.Posix.Optimize.Flags"
               valueType="string">
         </option>
         <optionCategory
               id="gnu.cpp.compiler.category.debug"
               name="%OptionCategory.Debug"
               owner="cdt.managedbuild.tool.gnu.cpp.compiler">
         </optionCategory>
         <option
               category="gnu.cpp.compiler.category.debug"
               id="gnu.cpp.compiler.option.debugging.level"
               name="%Option.Posix.DebugLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  id="gnu.cpp.compiler.debugging.level.none"
                  isDefault="false"
                  name="%Option.Posix.Debug.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g1"
                  id="gnu.cpp.compiler.debugging.level.minimal"
                  name="%Option.Posix.Debug.Min">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g"
                  id="gnu.cpp.compiler.debugging.level.default"
                  isDefault="true"
                  name="%Option.Posix.Debug.Def">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g3"
                  id="gnu.cpp.compiler.debugging.level.max"
                  isDefault="false"
                  name="%Option.Posix.Debug.Max">
            </enumeratedOptionValue>
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="gnu.cpp.compiler.debugging.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="gnu.cpp.compiler.debugging.level.max">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="gnu.cpp.compiler.category.debug"
               id="gnu.cpp.compiler.option.debugging.other"
               name="%Option.Posix.Debug.Other"
               valueType="string">
         </option>
         <option
               category="gnu.cpp.compiler.category.debug"
               command="-p"
               defaultValue="false"
               id="gnu.cpp.compiler.option.debugging.prof"
               name="%Option.Posix.Debug.prof"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.debug"
               command="-pg"
               defaultValue="false"
               id="gnu.cpp.compiler.option.debugging.gprof"
               name="%Option.Posix.Debug.gprof"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.debug"
               command="-ftest-coverage -fprofile-arcs"
               defaultValue="false"
               id="gnu.cpp.compiler.option.debugging.codecov"
               name="%Option.codecov"
               tip="%Option.codecovTip"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.debug"
               command="-fsanitize=address"
               defaultValue="false"
               id="gnu.cpp.compiler.option.debugging.sanitaddress"
               name="%Option.Posix.Debug.sanitaddress"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.debug"
               command="-fsanitize=pointer-compare -fsanitize=pointer-subtract"
               defaultValue="false"
               id="gnu.cpp.compiler.option.debugging.sanitpointers"
               name="%Option.Posix.Debug.sanitpointers"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.debug"
               command="-fsanitize=thread"
               defaultValue="false"
               id="gnu.cpp.compiler.option.debugging.sanitthread"
               name="%Option.Posix.Debug.sanitthread"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.debug"
               command="-fsanitize=leak"
               defaultValue="false"
               id="gnu.cpp.compiler.option.debugging.sanitleak"
               name="%Option.Posix.Debug.sanitleak"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.debug"
               command="-fsanitize=undefined"
               defaultValue="false"
               id="gnu.cpp.compiler.option.debugging.sanitundef"
               name="%Option.Posix.Debug.sanitundefined"
               valueType="boolean">
         </option>
         <optionCategory
               id="gnu.cpp.compiler.category.warnings"
               name="%OptionCategory.Warn"
               owner="cdt.managedbuild.tool.gnu.cpp.compiler">
         </optionCategory>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-fsyntax-only"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.syntax"
               name="%Option.Posix.Warn.Syntax"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-pedantic"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.pedantic"
               name="%Option.Posix.Warn.Pedandic"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-pedantic-errors"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.pedantic.error"
               name="%Option.Posix.Warn.PedErrors"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-w"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.nowarn"
               name="%Option.Posix.Warn.nowarn"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wall"
               defaultValue="true"
               id="gnu.cpp.compiler.option.warnings.allwarn"
               name="%Option.Posix.Warn.allwarn"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wextra"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.extrawarn"
               name="%Option.Posix.Warn.extrawarn"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Werror"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.toerrors"
               name="%Option.Posix.Warn.toerrs"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wconversion"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wconversion"
               name="%Option.Posix.Warn.wconversion"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wcast-align"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wcastalign"
               name="%Option.Posix.Warn.wcastalign"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wcast-qual"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wcastqual"
               name="%Option.Posix.Warn.wcastqual"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wctor-dtor-privacy"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wctordtorprivacy"
               name="%Option.Posix.Warn.wctordtorprivacy"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wdisabled-optimization"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wdisabledopt"
               name="%Option.Posix.Warn.wdisabledopt"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wlogical-op"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wlogicalop"
               name="%Option.Posix.Warn.wlogicalop"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wmissing-declarations"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wmissingdecl"
               name="%Option.Posix.Warn.wmissingdecl"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wmissing-include-dirs"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wmissingincdir"
               name="%Option.Posix.Warn.wmissingincdir"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wnoexcept"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wnoexccept"
               name="%Option.Posix.Warn.wnoexccept"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wold-style-cast"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.woldstylecast"
               name="%Option.Posix.Warn.woldstylecast"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Woverloaded-virtual"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.woverloadedvirtual"
               name="%Option.Posix.Warn.woverloadedvirtual"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wredundant-decls"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wredundantdecl"
               name="%Option.Posix.Warn.wredundantdecl"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wshadow"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wshadow"
               name="%Option.Posix.Warn.wshadow"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wsign-conversion"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wsignconv"
               name="%Option.Posix.Warn.wsignconv"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wsign-promo"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wsignpromo"
               name="%Option.Posix.Warn.wsignpromo"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wstrict-null-sentinel"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wstrictnullsent"
               name="%Option.Posix.Warn.wstrictnullsent"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wswitch-default"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wswitchdef"
               name="%Option.Posix.Warn.wswitchdef"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wundef"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wundef"
               name="%Option.Posix.Warn.wundef"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Weffc++"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.weffcpp"
               name="%Option.Posix.Warn.weffcpp"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.warnings"
               command="-Wfloat-equal"
               defaultValue="false"
               id="gnu.cpp.compiler.option.warnings.wfloatequal"
               name="%Option.Posix.Warn.wfloatequal"
               valueType="boolean">
         </option>
         <optionCategory
               id="gnu.cpp.compiler.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.gnu.cpp.compiler">
         </optionCategory>
         <option
               category="gnu.cpp.compiler.category.other"
               defaultValue="-c -fmessage-length=0"
               id="gnu.cpp.compiler.option.other.other"
               name="%Option.OtherFlags"
               valueType="string">
            <enablement
                  type="CMD_USAGE">
            </enablement>
         </option>
         <option
               category="gnu.cpp.compiler.category.other"
               command="-v"
               defaultValue="false"
               id="gnu.cpp.compiler.option.other.verbose"
               name="%Option.Posix.Verbose"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.other"
               command="-fPIC"
               defaultValue="false"
               id="gnu.cpp.compiler.option.other.pic"
               name="%Option.PIC"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.other"
               command="-fstack-protector-all -Wformat=2 -Wformat-security -Wstrict-overflow"
               defaultValue="false"
               id="gnu.cpp.compiler.option.misc.hardening"
               name="%Option.Security"
               valueType="boolean">
         </option>
         <option
               category="gnu.cpp.compiler.category.other"
               command="-fPIE"
               defaultValue="false"
               id="gnu.cpp.compiler.option.misc.randomization"
               name="%Option.Randomization"
               valueType="boolean">
         </option>
         <inputType
               id="cdt.managedbuild.tool.gnu.cpp.compiler.input"
               languageId="org.eclipse.cdt.core.g++"
               sourceContentType="org.eclipse.cdt.core.cxxSource">
         </inputType>
         <outputType
               buildVariable="OBJS"
               id="cdt.managedbuild.tool.gnu.cpp.compiler.output"
               namePattern="%.o">
         </outputType>
      </tool>
      <tool
            id="cdt.managedbuild.tool.gnu.c.linker.cygwin"
            name="%ToolName.linker.cygwin.gnu.c"
            superClass="cdt.managedbuild.tool.gnu.c.linker">
         <envVarBuildPath
               buildPathResolver="org.eclipse.cdt.managedbuilder.gnu.cygwin.CygwinPathResolver"
               pathType="buildpathLibrary"
               variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <outputType
               id="cdt.managedbuild.tool.gnu.c.linker.cygwin.output"
               outputName="${ProjName}.exe"
               superClass="cdt.managedbuild.tool.gnu.c.linker.output">
         </outputType>
         <outputType
               buildVariable="LIBRARIES"
               id="cdt.managedbuild.tool.gnu.c.linker.cygwin.output.so"
               outputName="${ProjName}.dll"
               superClass="cdt.managedbuild.tool.gnu.c.linker.output.so">
         </outputType>
      </tool>
      <tool
            id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin"
            name="%ToolName.linker.cygwin.gnu.cpp"
            superClass="cdt.managedbuild.tool.gnu.cpp.linker">
         <envVarBuildPath
               buildPathResolver="org.eclipse.cdt.managedbuilder.gnu.cygwin.CygwinPathResolver"
               pathType="buildpathLibrary"
               variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <outputType
               id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.output"
               outputName="${ProjName}.exe"
               superClass="cdt.managedbuild.tool.gnu.cpp.linker.output">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </checkBuildProperty>
            </enablement>
         </outputType>
         <outputType
               buildVariable="LIBRARIES"
               id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.output.so"
               outputName="${ProjName}.dll"
               superClass="cdt.managedbuild.tool.gnu.cpp.linker.output.so">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.exe">
               </checkBuildProperty>
            </enablement>
         </outputType>
      </tool>
      <tool
            id="cdt.managedbuild.tool.gnu.c.compiler.cygwin"
            name="%ToolName.compiler.cygwin.gnu.c"
            superClass="cdt.managedbuild.tool.gnu.c.compiler">
         <envVarBuildPath
               buildPathResolver="org.eclipse.cdt.managedbuilder.gnu.cygwin.CygwinPathResolver"
               pathType="buildpathInclude"
               variableList="CPATH,C_INCLUDE_PATH">
         </envVarBuildPath>
         <inputType
               id="cdt.managedbuild.tool.gnu.c.compiler.input.cygwin"
               superClass="cdt.managedbuild.tool.gnu.c.compiler.input">
         </inputType>
      </tool>
      <tool
            id="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin"
            name="%ToolName.compiler.cygwin.gnu.cpp"
            superClass="cdt.managedbuild.tool.gnu.cpp.compiler">
         <envVarBuildPath
               buildPathResolver="org.eclipse.cdt.managedbuilder.gnu.cygwin.CygwinPathResolver"
               pathType="buildpathInclude"
               variableList="CPATH,CPLUS_INCLUDE_PATH">
         </envVarBuildPath>
         <inputType
               id="cdt.managedbuild.tool.gnu.cpp.compiler.input.cygwin"
               superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input">
         </inputType>
      </tool>
      <builder
            autoBuildTarget="all"
            cleanBuildTarget="clean"
            command="${MAKE_HOME}make"
            errorParsers="org.eclipse.cdt.core.CWDLocator;org.eclipse.cdt.core.GmakeErrorParser"
            id="cdt.managedbuild.target.gnu.builder"
            ignoreErrCmd="-k"
            incrementalBuildTarget="all"
            name="%GNUMakeBuilder.name"
            parallelBuildCmd="-j*"
            reservedMacroNames="ROOT,DEPS,OBJS,.*_SRCS,EXECUTABLES,SUBDIRS,LIBS,USER_OBJS,.*_INPUTS,.*_OUTPUTS"
            variableFormat="${=}">
      </builder>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.gnu.base"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector"
            name="%ToolChainName.gnu.all"
            osList="all">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.GNU_ELF"
               id="cdt.managedbuild.target.gnu.platform.base"
               name="%PlatformName.Dbg"
               osList="linux,hpux,aix,qnx">
         </targetPlatform>
         <builder
               id="cdt.managedbuild.target.gnu.builder.base"
               superClass="cdt.managedbuild.target.gnu.builder">
         </builder>
         <tool
               id="cdt.managedbuild.tool.gnu.archiver.base"
               superClass="cdt.managedbuild.tool.gnu.archiver">
            <enablement
                  type="ALL">
               <or>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.compound">
                  </checkBuildProperty>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </or>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cpp.compiler.base"
               superClass="cdt.managedbuild.tool.gnu.cpp.compiler">
            <option
                  category="gnu.cpp.compiler.category.other"
                  command="-pthread"
                  defaultValue="false"
                  id="gnu.cpp.compiler.option.pthread"
                  name="%Option.Pthread"
                  tip="%Option.PthreadCompilerTip"
                  valueType="boolean">
            </option>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.c.compiler.base"
               superClass="cdt.managedbuild.tool.gnu.c.compiler">
            <option
                  category="gnu.c.compiler.category.other"
                  command="-pthread"
                  defaultValue="false"
                  id="gnu.c.compiler.option.pthread"
                  name="%Option.Pthread"
                  tip="%Option.PthreadCompilerTip"
                  valueType="boolean">
            </option>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.c.linker.to.exe.base"
               name="%tool.gnu.c.linker.to.exe.base"
               superClass="cdt.managedbuild.tool.gnu.c.linker">
            <option
                  category="gnu.c.link.category.general"
                  command="-pthread"
                  defaultValue="false"
                  id="gnu.c.link.option.pthread"
                  name="%Option.Pthread"
                  tip="%Option.PthreadLinkerTip"
                  valueType="boolean">
            </option>
            <enablement
                  type="ALL">
               <or>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.compound">
                  </checkBuildProperty>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.exe">
                  </checkBuildProperty>
               </or>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.c.linker.to.sharedLib.base"
               name="%tool.gnu.c.linker.to.sharedLib.base"
               superClass="cdt.managedbuild.tool.gnu.c.linker">
            <option
                  category="gnu.c.link.category.general"
                  command="-pthread"
                  defaultValue="false"
                  id="gnu.c.link.option.pthread"
                  name="%Option.Pthread"
                  tip="%Option.PthreadLinkerTip"
                  valueType="boolean">
            </option>
            <option
                  category="gnu.c.link.category.shared"
                  command="-shared"
                  defaultValue="true"
                  id="gnu.c.link.option.shared"
                  name="%Option.Posix.Linker.Shared"
                  valueType="boolean">
               <enablement
                     type="CMD_USAGE">
               </enablement>
            </option>
            <enablement
                  type="ALL">
               <or>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.compound">
                  </checkBuildProperty>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
                  </checkBuildProperty>
               </or>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cpp.linker.to.sharedLib.base"
               name="%tool.gnu.cpp.linker.to.sharedLib.base"
               superClass="cdt.managedbuild.tool.gnu.cpp.linker">
            <option
                  category="gnu.cpp.link.category.options"
                  command="-pthread"
                  defaultValue="false"
                  id="gnu.cpp.link.option.pthread"
                  name="%Option.Pthread"
                  tip="%Option.PthreadLinkerTip"
                  valueType="boolean">
            </option>
            <option
                  category="gnu.cpp.link.category.shared"
                  command="-shared"
                  defaultValue="true"
                  id="gnu.cpp.link.option.shared"
                  name="%Option.Posix.Linker.Shared"
                  valueType="boolean">
               <enablement
                     type="CMD_USAGE">
               </enablement>
            </option>
            <enablement
                  type="ALL">
               <or>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.compound">
                  </checkBuildProperty>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
                  </checkBuildProperty>
               </or>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cpp.linker.to.exe.base"
               name="%tool.gnu.cpp.linker.to.exe.base"
               superClass="cdt.managedbuild.tool.gnu.cpp.linker">
            <option
                  category="gnu.cpp.link.category.options"
                  command="-pthread"
                  defaultValue="false"
                  id="gnu.cpp.link.option.pthread"
                  name="%Option.Pthread"
                  tip="%Option.PthreadLinkerTip"
                  valueType="boolean">
            </option>
            <enablement
                  type="ALL">
               <or>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.compound">
                  </checkBuildProperty>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.exe">
                  </checkBuildProperty>
               </or>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.assembler.base"
               superClass="cdt.managedbuild.tool.gnu.assembler">
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.managedbuilder.gnu.cygwin.GnuCygwinConfigurationEnvironmentSupplier"
            id="cdt.managedbuild.toolchain.gnu.cygwin.base"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorCygwin"
            name="%ToolChainName.Cygwin"
            osList="win32"
            targetTool="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.base;cdt.managedbuild.tool.gnu.c.linker.cygwin.base;cdt.managedbuild.tool.gnu.archiver">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.Cygwin_PE64"
               id="cdt.managedbuild.target.gnu.platform.cygwin.base"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
         <builder
               id="cdt.managedbuild.target.gnu.builder.cygwin.base"
               superClass="cdt.managedbuild.target.gnu.builder">
         </builder>
         <tool
               id="cdt.managedbuild.tool.gnu.assembler.cygwin.base"
               superClass="cdt.managedbuild.tool.gnu.assembler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.archiver.cygwin.base"
               superClass="cdt.managedbuild.tool.gnu.archiver">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.base"
               superClass="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.c.compiler.cygwin.base"
               superClass="cdt.managedbuild.tool.gnu.c.compiler.cygwin">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.c.linker.cygwin.base"
               superClass="cdt.managedbuild.tool.gnu.c.linker.cygwin">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
            <option
                  category="gnu.cpp.link.category.shared"
                  command="-shared"
                  defaultValue="true"
                  id="gnu.cpp.link.option.shared"
                  name="%Option.Posix.Linker.Shared"
                  valueType="boolean">
               <enablement
                     type="CMD_USAGE">
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
                  </checkBuildProperty>
               </enablement>
            </option>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.base"
               superClass="cdt.managedbuild.tool.gnu.cpp.linker.cygwin">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
            <option
                  category="gnu.cpp.link.category.shared"
                  command="-shared"
                  defaultValue="true"
                  id="gnu.cpp.link.option.shared"
                  name="%Option.Posix.Linker.Shared"
                  valueType="boolean">
               <enablement
                     type="CMD_USAGE">
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
                  </checkBuildProperty>
               </enablement>
            </option>
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.gnu.mingw.base"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorMinGW"
            name="%ToolChainName.MinGW"
            osList="win32"
            targetTool="cdt.managedbuild.tool.gnu.cpp.linker.mingw.base;cdt.managedbuild.tool.gnu.c.linker.mingw.base;cdt.managedbuild.tool.gnu.archiver">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE64"
               id="cdt.managedbuild.target.gnu.platform.mingw.base"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
         <builder
               command="${MAKE_HOME}make"
               id="cdt.managedbuild.tool.gnu.builder.mingw.base">
         </builder>
         <tool
               id="cdt.managedbuild.tool.gnu.assembler.mingw.base"
               superClass="cdt.managedbuild.tool.gnu.assembler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.archiver.mingw.base"
               superClass="cdt.managedbuild.tool.gnu.archiver">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.base"
               superClass="cdt.managedbuild.tool.gnu.cpp.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.c.compiler.mingw.base"
               superClass="cdt.managedbuild.tool.gnu.c.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.c.linker.mingw.base"
               name="%ToolName.linker.mingw.gnu.c"
               superClass="cdt.managedbuild.tool.gnu.c.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
            <outputType
                  id="cdt.managedbuild.tool.gnu.c.linker.mingw.so.output.base"
                  outputName="${ProjName}.dll"
                  superClass="cdt.managedbuild.tool.gnu.c.linker.output.so">
            </outputType>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cpp.linker.mingw.base"
               name="%ToolName.linker.mingw.gnu.cpp"
               superClass="cdt.managedbuild.tool.gnu.cpp.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
            <outputType
                  id="cdt.managedbuild.tool.gnu.cpp.linker.mingw.so.output.base"
                  outputName="${ProjName}.dll"
                  superClass="cdt.managedbuild.tool.gnu.cpp.linker.output.so">
            </outputType>
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.gnu.macosx.base"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector"
            name="%ToolChainName.Macosx"
            osList="macosx"
            targetTool="cdt.managedbuild.tool.macosx.c.linker.macosx.base;cdt.managedbuild.tool.macosx.cpp.linker.macosx.base;cdt.managedbuild.tool.gnu.archiver">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.MachO64"
               id="cdt.managedbuild.target.gnu.platform.macosx.base"
               name="%PlatformName.Dbg"
               osList="macosx">
         </targetPlatform>
         <builder
               id="cdt.managedbuild.target.gnu.builder.macosx.base"
               superClass="cdt.managedbuild.target.gnu.builder">
         </builder>
         <tool
               id="cdt.managedbuild.tool.macosx.c.linker.macosx.base"
               superClass="cdt.managedbuild.tool.macosx.c.linker">
            <enablement
                  type="CMD_USAGE">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.macosx.cpp.linker.macosx.base"
               superClass="cdt.managedbuild.tool.macosx.cpp.linker">
            <enablement
                  type="CMD_USAGE">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.assembler.macosx.base"
               superClass="cdt.managedbuild.tool.gnu.assembler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.archiver.macosx.base"
               superClass="cdt.managedbuild.tool.gnu.archiver">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.base"
               superClass="cdt.managedbuild.tool.gnu.cpp.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.c.compiler.macosx.base"
               superClass="cdt.managedbuild.tool.gnu.c.compiler">
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.gnu.solaris.base"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector"
            name="%ToolChainName.Solaris"
            osList="solaris"
            superClass="cdt.managedbuild.toolchain.gnu.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.target.gnu.solaris.base"
               name="%PlatformName.Dbg"
               osList="solaris">
         </targetPlatform>
         <builder
               id="cdt.managedbuild.target.gnu.builder.solaris.base"
               superClass="cdt.managedbuild.target.gnu.builder">
         </builder>
         <tool
               id="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.base"
               name="%ToolName.compiler.solaris.cpp"
               superClass="cdt.managedbuild.tool.gnu.cpp.compiler.base">
         </tool>
         <tool
               id="cdt.managedbuild.tool.gnu.solaris.c.compiler.base"
               name="%ToolName.compiler.solaris.c"
               superClass="cdt.managedbuild.tool.gnu.c.compiler.base">
         </tool>
      </toolChain>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.gnu.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.gnu.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.exe.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.exe.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.exe.debug"
                     superClass="cdt.managedbuild.target.gnu.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.base">
                  <option
                        id="gnu.cpp.compiler.exe.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.exe.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.base">
                  <option
                        id="gnu.c.compiler.exe.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.exe.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.to.exe.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.to.exe.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.exe.release"
                  superClass="cdt.managedbuild.toolchain.gnu.exe.debug">
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.gnu.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.so.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.so.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.so.debug"
                     superClass="cdt.managedbuild.target.gnu.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.base">
                  <option
                        id="gnu.cpp.compiler.so.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.so.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.base">
                  <option
                        id="gnu.c.compiler.so.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.so.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.to.sharedLib.base">
                  <option
                        id="gnu.c.link.so.debug.option.shared"
                        superClass="gnu.c.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.c.linker.so.debug.output"
                        superClass="cdt.managedbuild.tool.gnu.c.linker.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.to.sharedLib.base">
                  <option
                        id="gnu.cpp.link.so.debug.option.shared"
                        superClass="gnu.cpp.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.cpp.linker.so.debug.output"
                        superClass="cdt.managedbuild.tool.gnu.cpp.linker.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.so.release"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.so.release"
                     superClass="cdt.managedbuild.target.gnu.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.so.release"
                     superClass="cdt.managedbuild.target.gnu.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.base">
                  <option
                        id="gnu.cpp.compiler.so.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.so.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.base">
                  <option
                        id="gnu.c.compiler.so.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.so.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.to.sharedLib.base">
                  <option
                        id="gnu.c.link.so.release.option.shared"
                        superClass="gnu.c.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.c.linker.so.release.output"
                        superClass="cdt.managedbuild.tool.gnu.c.linker.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.to.sharedLib.base">
                  <option
                        id="gnu.cpp.link.so.release.option.shared"
                        superClass="gnu.cpp.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.cpp.linker.so.release.output"
                        superClass="cdt.managedbuild.tool.gnu.cpp.linker.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.so.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.gnu.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.lib.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.lib.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.lib.debug"
                     superClass="cdt.managedbuild.target.gnu.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.base">
                  <option
                        id="gnu.cpp.compiler.lib.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.lib.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.base">
                  <option
                        id="gnu.c.compiler.lib.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.lib.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.archiver.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.archiver.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.lib.release"
                  superClass="cdt.managedbuild.toolchain.gnu.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.lib.release"
                     superClass="cdt.managedbuild.target.gnu.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.lib.release"
                     superClass="cdt.managedbuild.target.gnu.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.base">
                  <option
                        id="gnu.cpp.compiler.lib.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.lib.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.base">
                  <option
                        id="gnu.c.compiler.lib.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.lib.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.archiver.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.archiver.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            artifactExtension="exe"
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.gnu.cygwin.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.gnu.cygwin.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cygwin.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cygwin.exe.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.cygwin.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.cygwin.exe.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.cygwin.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.cygwin.exe.debug"
                     superClass="cdt.managedbuild.target.gnu.builder.cygwin.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.base">
                  <option
                        id="gnu.cpp.compiler.cygwin.exe.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.cygwin.exe.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.cygwin.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.cygwin.base">
                  <option
                        id="gnu.c.compiler.cygwin.exe.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.cygwin.exe.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.cygwin.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.cygwin.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.cygwin.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.cygwin.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cygwin.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cygwin.exe.release"
                  superClass="cdt.managedbuild.toolchain.gnu.cygwin.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.cygwin.exe.release"
                     superClass="cdt.managedbuild.target.gnu.platform.cygwin.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.cygwin.exe.release"
                     superClass="cdt.managedbuild.target.gnu.builder.cygwin.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.base">
                  <option
                        id="gnu.cpp.compiler.cygwin.exe.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.cygwin.exe.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.cygwin.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.cygwin.base">
                  <option
                        id="gnu.c.compiler.cygwin.exe.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.cygwin.exe.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.cygwin.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.cygwin.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.cygwin.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.cygwin.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.gnu.cygwin.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cygwin.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cygwin.so.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.cygwin.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.cygwin.so.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.cygwin.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.cygwin.so.debug"
                     superClass="cdt.managedbuild.target.gnu.builder.cygwin.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.base">
                  <option
                        id="gnu.cpp.compiler.cygwin.so.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.cygwin.so.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.cygwin.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.cygwin.base">
                  <option
                        id="gnu.c.compiler.cygwin.so.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.cygwin.so.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.cygwin.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.cygwin.base">
                  <option
                        id="gnu.c.link.cygwin.so.debug.option.shared"
                        superClass="gnu.c.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.c.linker.cygwin.so.debug.output"
                        superClass="cdt.managedbuild.tool.gnu.c.linker.cygwin.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.base">
                  <option
                        id="gnu.cpp.link.cygwin.so.debug.option.shared"
                        superClass="gnu.cpp.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.so.debug.output"
                        superClass="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.cygwin.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.cygwin.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cygwin.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cygwin.so.release"
                  superClass="cdt.managedbuild.toolchain.gnu.cygwin.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.cygwin.so.release"
                     superClass="cdt.managedbuild.target.gnu.platform.cygwin.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.cygwin.so.release"
                     superClass="cdt.managedbuild.target.gnu.builder.cygwin.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.so.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.base">
                  <option
                        id="gnu.cpp.compiler.cygwin.so.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.cygwin.so.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.cygwin.so.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.cygwin.base">
                  <option
                        id="gnu.c.compiler.cygwin.so.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.cygwin.so.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.cygwin.so.release"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.cygwin.base">
                  <option
                        id="gnu.c.link.cygwin.so.release.option.shared"
                        superClass="gnu.c.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.c.linker.cygwin.so.release.output"
                        superClass="cdt.managedbuild.tool.gnu.c.linker.cygwin.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.so.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.base">
                  <option
                        id="gnu.cpp.link.cygwin.so.release.option.shared"
                        superClass="gnu.cpp.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.so.release.output"
                        superClass="cdt.managedbuild.tool.gnu.cpp.linker.cygwin.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.cygwin.so.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.cygwin.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.gnu.cygwin.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cygwin.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cygwin.lib.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.cygwin.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.cygwin.lib.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.cygwin.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.cygwin.lib.debug"
                     superClass="cdt.managedbuild.target.gnu.builder.cygwin.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.base">
                  <option
                        id="gnu.cpp.compiler.cygwin.lib.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.cygwin.lib.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.cygwin.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.cygwin.base">
                  <option
                        id="gnu.c.compiler.cygwin.lib.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.cygwin.lib.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.archiver.cygwin.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.archiver.cygwin.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.cygwin.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.cygwin.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.cygwin.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.cygwin.lib.release"
                  superClass="cdt.managedbuild.toolchain.gnu.cygwin.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.cygwin.lib.release"
                     superClass="cdt.managedbuild.target.gnu.platform.cygwin.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.cygwin.lib.release"
                     superClass="cdt.managedbuild.target.gnu.builder.cygwin.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.cygwin.base">
                  <option
                        id="gnu.cpp.compiler.cygwin.lib.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.cygwin.lib.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.cygwin.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.cygwin.base">
                  <option
                        id="gnu.c.compiler.cygwin.lib.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.cygwin.lib.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.archiver.cygwin.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.archiver.cygwin.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.cygwin.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.cygwin.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            artifactExtension="exe"
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.gnu.mingw.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.gnu.mingw.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.mingw.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.mingw.exe.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.mingw.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.mingw.exe.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.mingw.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.base">
                  <option
                        id="gnu.cpp.compiler.mingw.exe.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.mingw.exe.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.mingw.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.mingw.base">
                  <option
                        id="gnu.c.compiler.mingw.exe.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.mingw.exe.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.mingw.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.mingw.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.mingw.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.mingw.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.mingw.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.mingw.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.mingw.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.mingw.exe.release"
                  superClass="cdt.managedbuild.toolchain.gnu.mingw.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.mingw.exe.release"
                     superClass="cdt.managedbuild.target.gnu.platform.mingw.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.base">
                  <option
                        id="gnu.cpp.compiler.mingw.exe.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.mingw.exe.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.mingw.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.mingw.base">
                  <option
                        id="gnu.c.compiler.mingw.exe.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.mingw.exe.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.mingw.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.mingw.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.mingw.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.mingw.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.mingw.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.mingw.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.gnu.mingw.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.mingw.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.mingw.so.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.mingw.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.mingw.so.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.mingw.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.base">
                  <option
                        id="gnu.cpp.compiler.mingw.so.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.mingw.so.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.mingw.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.mingw.base">
                  <option
                        id="gnu.c.compiler.mingw.so.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.mingw.so.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.mingw.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.mingw.base">
                  <option
                        id="gnu.c.link.mingw.so.debug.option.shared"
                        superClass="gnu.c.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.c.linker.mingw.so.debug.output"
                        superClass="cdt.managedbuild.tool.gnu.c.linker.mingw.so.output.base">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.mingw.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.mingw.base">
                  <option
                        id="gnu.cpp.link.mingw.so.debug.option.shared"
                        superClass="gnu.cpp.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.cpp.linker.mingw.so.debug.output"
                        superClass="cdt.managedbuild.tool.gnu.cpp.linker.mingw.so.output.base">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.mingw.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.mingw.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.mingw.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.mingw.so.release"
                  superClass="cdt.managedbuild.toolchain.gnu.mingw.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.mingw.so.release"
                     superClass="cdt.managedbuild.target.gnu.platform.mingw.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.so.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.base">
                  <option
                        id="gnu.cpp.compiler.mingw.so.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.mingw.so.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.mingw.so.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.mingw.base">
                  <option
                        id="gnu.c.compiler.mingw.so.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.mingw.so.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.linker.mingw.so.release"
                     superClass="cdt.managedbuild.tool.gnu.c.linker.mingw.base">
                  <option
                        id="gnu.c.link.mingw.so.release.option.shared"
                        superClass="gnu.c.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.c.linker.mingw.so.release.output"
                        superClass="cdt.managedbuild.tool.gnu.c.linker.mingw.so.output.base">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.linker.mingw.so.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.linker.mingw.base">
                  <option
                        id="gnu.cpp.link.mingw.so.release.option.shared"
                        superClass="gnu.cpp.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.gnu.cpp.linker.mingw.so.release.output"
                        superClass="cdt.managedbuild.tool.gnu.cpp.linker.mingw.so.output.base">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.mingw.so.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.mingw.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.gnu.mingw.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.mingw.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.mingw.lib.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.mingw.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.mingw.lib.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.mingw.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.base">
                  <option
                        id="gnu.cpp.compiler.mingw.lib.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.mingw.lib.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.mingw.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.mingw.base">
                  <option
                        id="gnu.c.compiler.mingw.lib.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.mingw.lib.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.archiver.mingw.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.archiver.mingw.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.mingw.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.mingw.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.mingw.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.mingw.lib.release"
                  superClass="cdt.managedbuild.toolchain.gnu.mingw.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.mingw.lib.release"
                     superClass="cdt.managedbuild.target.gnu.platform.mingw.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.mingw.base">
                  <option
                        id="gnu.cpp.compiler.mingw.lib.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.mingw.lib.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.mingw.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.mingw.base">
                  <option
                        id="gnu.c.compiler.mingw.lib.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.mingw.lib.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.archiver.mingw.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.archiver.mingw.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.mingw.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.mingw.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.gnu.macosx.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dylib">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.macosx.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.gnu.macosx.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.macosx.exe.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.macosx.exe.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.macosx.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.macosx.exe.debug"
                     superClass="cdt.managedbuild.target.gnu.builder.macosx.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.base">
                  <option
                        id="gnu.cpp.compilermacosx.exe.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.macosx.exe.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.macosx.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.macosx.base">
                  <option
                        id="gnu.c.compiler.macosx.exe.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.macosx.exe.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.macosx.c.linker.macosx.exe.debug"
                     superClass="cdt.managedbuild.tool.macosx.c.linker.macosx.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.macosx.cpp.linker.macosx.exe.debug"
                     superClass="cdt.managedbuild.tool.macosx.cpp.linker.macosx.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.macosx.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.macosx.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.macosx.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.macosx.exe.release"
                  superClass="cdt.managedbuild.toolchain.gnu.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.macosx.exe.release"
                     superClass="cdt.managedbuild.target.gnu.platform.macosx.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.macosx.exe.release"
                     superClass="cdt.managedbuild.target.gnu.builder.macosx.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.base">
                  <option
                        id="gnu.cpp.compiler.macosx.exe.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.macosx.exe.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.macosx.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.macosx.base">
                  <option
                        id="gnu.c.compiler.macosx.exe.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.macosx.exe.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.macosx.c.linker.macosx.exe.release"
                     superClass="cdt.managedbuild.tool.macosx.c.linker.macosx.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.macosx.cpp.linker.macosx.exe.release"
                     superClass="cdt.managedbuild.tool.macosx.cpp.linker.macosx.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.macosx.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.macosx.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.macosx.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.macosx.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.macosx.so.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.macosx.so.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.macosx.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.macosx.so.debug"
                     superClass="cdt.managedbuild.target.gnu.builder.macosx.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.base">
                  <option
                        id="gnu.cpp.compiler.macosx.so.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.macosx.so.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.macosx.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.macosx.base">
                  <option
                        id="gnu.c.compiler.macosx.so.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.macosx.so.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.macosx.c.linker.macosx.so.debug"
                     superClass="cdt.managedbuild.tool.macosx.c.linker.macosx.base">
                  <option
                        id="macosx.c.link.macosx.so.debug.option.shared"
                        superClass="macosx.c.link.option.shared">
                  </option>
                  <option
                        id="macosx.c.link.macosx.so.debug.option.nostart"
                        superClass="macosx.c.link.option.nostart">
                  </option>
                  <option
                        id="macosx.c.link.macosx.so.debug.option.nodeflibs"
                        superClass="macosx.c.link.option.nodeflibs">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.macosx.c.linker.macosx.so.debug.output"
                        superClass="cdt.managedbuild.tool.macosx.c.linker.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.macosx.cpp.linker.macosx.so.debug"
                     superClass="cdt.managedbuild.tool.macosx.cpp.linker.macosx.base">
                  <option
                        id="macosx.cpp.link.macosx.so.debug.option.shared"
                        superClass="macosx.cpp.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.macosx.cpp.linker.macosx.so.debug.output"
                        superClass="cdt.managedbuild.tool.macosx.cpp.linker.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.macosx.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.macosx.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.macosx.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.macosx.so.release"
                  superClass="cdt.managedbuild.toolchain.gnu.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.macosx.so.release"
                     superClass="cdt.managedbuild.target.gnu.platform.macosx.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.macosx.so.release"
                     superClass="cdt.managedbuild.target.gnu.builder.macosx.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.so.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.base">
                  <option
                        id="gnu.cpp.compiler.macosx.so.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.macosx.so.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.macosx.so.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.macosx.base">
                  <option
                        id="gnu.c.compiler.macosx.so.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.macosx.so.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.macosx.c.linker.macosx.so.release"
                     superClass="cdt.managedbuild.tool.macosx.c.linker.macosx.base">
                  <option
                        id="macosx.c.link.macosx.so.release.option.shared"
                        superClass="macosx.c.link.option.shared">
                  </option>
                  <option
                        id="macosx.c.link.macosx.so.release.option.nostart"
                        superClass="macosx.c.link.option.nostart">
                  </option>
                  <option
                        id="macosx.c.link.macosx.so.release.option.nodeflibs"
                        superClass="macosx.c.link.option.nodeflibs">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.macosx.c.linker.macosx.so.release.output"
                        superClass="cdt.managedbuild.tool.macosx.c.linker.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.macosx.cpp.linker.macosx.so.release"
                     superClass="cdt.managedbuild.tool.macosx.cpp.linker.macosx.base">
                  <option
                        id="macosx.cpp.link.macosx.so.release.option.shared"
                        superClass="macosx.cpp.link.option.shared">
                  </option>
                  <outputType
                        id="cdt.managedbuild.tool.macosx.cpp.linker.macosx.so.release.output"
                        superClass="cdt.managedbuild.tool.macosx.cpp.linker.output.so">
                  </outputType>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.macosx.so.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.macosx.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.macosx.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.macosx.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.macosx.lib.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.macosx.lib.debug"
                     superClass="cdt.managedbuild.target.gnu.platform.macosx.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.macosx.lib.debug"
                     superClass="cdt.managedbuild.target.gnu.builder.macosx.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.base">
                  <option
                        id="gnu.cpp.compiler.macosx.lib.debug.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.macosx.lib.debug.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.macosx.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.macosx.base">
                  <option
                        id="gnu.c.compiler.macosx.lib.debug.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.macosx.lib.debug.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.toolmacosx.lib.debug.gnu.archiver"
                     superClass="cdt.managedbuild.tool.gnu.archiver.macosx.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.macosx.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.assembler.macosx.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.macosx.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.macosx.lib.release"
                  superClass="cdt.managedbuild.toolchain.gnu.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.platform.macosx.lib.release"
                     superClass="cdt.managedbuild.target.gnu.platform.macosx.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.gnu.builder.macosx.lib.release"
                     superClass="cdt.managedbuild.target.gnu.builder.macosx.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.cpp.compiler.macosx.base">
                  <option
                        id="gnu.cpp.compiler.macosx.lib.release.option.optimization.level"
                        superClass="gnu.cpp.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.cpp.compiler.macosx.lib.release.option.debugging.level"
                        superClass="gnu.cpp.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.c.compiler.macosx.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.c.compiler.macosx.base">
                  <option
                        id="gnu.c.compiler.macosx.lib.release.option.optimization.level"
                        superClass="gnu.c.compiler.option.optimization.level">
                  </option>
                  <option
                        id="gnu.c.compiler.macosx.lib.release.option.debugging.level"
                        superClass="gnu.c.compiler.option.debugging.level">
                  </option>
               </tool>
               <tool
                     id="cdt.managedbuild.toolmacosx.lib.release.gnu.archiver"
                     superClass="cdt.managedbuild.tool.gnu.archiver.macosx.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.assembler.macosx.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.assembler.macosx.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.gnu.solaris.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.gnu.solaris.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               id="cdt.managedbuild.config.gnu.solaris.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.solaris.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.solaris.exe.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.solaris.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.solaris.platform.exe.debug"
                     superClass="cdt.managedbuild.target.gnu.solaris.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.gnu.solaris.c.compiler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               id="cdt.managedbuild.config.gnu.solaris.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.solaris.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.solaris.exe.release"
                  superClass="cdt.managedbuild.toolchain.gnu.solaris.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.solaris.platform.exe.release"
                     superClass="cdt.managedbuild.target.gnu.solaris.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.gnu.solaris.c.compiler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.gnu.solaris.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               id="cdt.managedbuild.config.gnu.solaris.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.solaris.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.solaris.so.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.solaris.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.solaris.platform.so.debug"
                     superClass="cdt.managedbuild.target.gnu.solaris.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.gnu.solaris.c.compiler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               id="cdt.managedbuild.config.gnu.solaris.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.solaris.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.solaris.so.release"
                  superClass="cdt.managedbuild.toolchain.gnu.solaris.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.solaris.platform.so.release"
                     superClass="cdt.managedbuild.target.gnu.solaris.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.gnu.solaris.c.compiler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.gnu.solaris.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               id="cdt.managedbuild.config.gnu.solaris.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.gnu.solaris.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.solaris.lib.debug"
                  superClass="cdt.managedbuild.toolchain.gnu.solaris.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.solaris.platform.lib.debug"
                     superClass="cdt.managedbuild.target.gnu.solaris.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.gnu.solaris.c.compiler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               id="cdt.managedbuild.config.gnu.solaris.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.gnu.solaris.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.gnu.solaris.lib.release"
                  superClass="cdt.managedbuild.toolchain.gnu.solaris.base">
               <targetPlatform
                     id="cdt.managedbuild.target.gnu.solaris.platform.lib.release"
                     superClass="cdt.managedbuild.target.gnu.solaris.base">
               </targetPlatform>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.solaris.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.gnu.solaris.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.gnu.solaris.c.compiler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
   </extension>
      <extension
         id="org.eclipse.cdt.managedbuilder.llvm.ui.buildDefinitions"
         name="%ToolName.linker.llvm.c"
         point="io.sloeber.autoBuild.buildDefinitions">
      <managedBuildRevision
            fileVersion="4.0.0">
      </managedBuildRevision>
      <tool
            command="llvm-ld"
            errorParsers="org.eclipse.cdt.core.GLDErrorParser"
            id="cdt.managedbuild.tool.llvm.c.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.c"
            natureFilter="both"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.managedbuilder.llvm.ui.buildArtefactType.lli">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathLibrary"
               variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <optionCategory
               id="llvm.c.link.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <option
               category="llvm.c.link.category.general"
               command="-stats"
               defaultValue="false"
               id="llvm.c.link.option.stats"
               name="%Option.Posix.Linker.Stats"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.general"
               command="-v"
               defaultValue="false"
               id="llvm.c.link.option.verbose"
               name="%Option.Posix.Linker.Verbose"
               tip="%option.tip"
               valueType="boolean">
         </option>
         <optionCategory
               id="llvm.c.link.category.libs"
               name="%OptionCategory.Libs"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <option
               browseType="none"
               category="llvm.c.link.category.libs"
               command="-l"
               id="llvm.c.link.option.libs"
               name="%Option.Posix.Libs"
               valueType="libs">
         </option>
         <option
               browseType="directory"
               category="llvm.c.link.category.libs"
               command="-L"
               id="llvm.c.link.option.paths"
               name="%Option.Posix.Libsearch"
               valueType="libPaths">
         </option>
         <optionCategory
               id="llvm.c.link.category.optimizations"
               name="%OptionCategory.Optimizations"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <option
               category="llvm.c.link.category.optimizations"
               command="-strip-all"
               defaultValue="false"
               id="llvm.c.link.option.strip.debug"
               name="%Option.Posix.Linker.Strip"
               tip="%option.tip.0"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-strip-debug"
               defaultValue="false"
               id="llvm.c.link.option.strip"
               name="%Option.Posix.Linker.Strip.Debug"
               tip="%option.tip.1"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-verify-each"
               defaultValue="false"
               id="llvm.c.link.option.verification"
               name="%Option.Posix.Linker.Verification"
               tip="%option.tip.2"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-disable-internalize"
               defaultValue="false"
               id="llvm.c.link.option.disable_internalize"
               name="%Option.Posix.Linker.DisableInternalize"
               tip="%option.tip.3"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-disable-opt"
               defaultValue="false"
               id="llvm.c.link.option.disable_optimization"
               name="%Option.Posix.Linker.DisableOptimization"
               tip="%option.tip.4"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-disable-inlining"
               defaultValue="false"
               id="llvm.c.link.option.disable_inhiling"
               name="%Option.Posix.Linker.DisableInhiling"
               tip="%option.tip.5"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.other"
               id="llvm.c.link.option.ldflags"
               name="%Option.Posix.Linker.Flags"
               valueType="string">
         </option>
         <option
               category="llvm.c.link.category.llvmOptions"
               command="-native"
               defaultValue="false"
               id="llvm.c.link.option.native"
               isAbstract="false"
               name="%Option.Posix.Linker.native"
               resourceFilter="all"
               tip="%option.tip.6"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.llvmOptions"
               command="-native-cbe"
               defaultValue="false"
               id="llvm.c.link.option.nativeCBackEnd"
               isAbstract="false"
               name="%Option.Posix.Linker.nativeCBackend"
               resourceFilter="all"
               tip="%option.tip.7"
               valueType="boolean">
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="false">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.exe">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               browseType="file"
               category="llvm.c.link.category.other"
               id="llvm.c.link.option.userobjs"
               name="%Option.Posix.UserBcs"
               valueType="userObjs">
         </option>
         <optionCategory
               id="llvm.c.link.category.llvmOptions"
               name="%Option.Posix.Linker.LlvmOptions"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <option
               category="llvm.c.link.category.llvmOptions"
               command="-link-as-library"
               defaultValue="false"
               id="llvm.c.link.option.linkaslibrary"
               isAbstract="false"
               name="%Option.Posix.Linker.link_as_library"
               tip="%option.tip.8"
               valueType="boolean">
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="true">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </checkBuildProperty>
            </enablement>
         </option>
         <optionCategory
               id="llvm.c.link.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <inputType
               id="cdt.managedbuild.tool.llvm.c.linker.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="LLVM_BC_EXECUTABLES"
               id="cdt.managedbuild.tool.llvm.c.linker.output.exe.bc"
               namePattern="%.exe.bc"
               outputName="${ProjName}.exe.bc">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </checkBuildProperty>
            </enablement>
         </outputType>
         <outputType
               buildVariable="LLVM_EXECUTABLES"
               id="cdt.managedbuild.tool.llvm.c.linker.output.exe"
               outputName="${ProjName}.exe">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.exe">
               </checkBuildProperty>
            </enablement>
         </outputType>
         <outputType
               buildVariable="LIBRARIES"
               id="cdt.managedbuild.tool.llvm.c.linker.output.so"
               outputName="lib_${ProjName}.so">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
         </outputType>
      </tool>
      <tool
            command="llvm-ar"
            id="cdt.managedbuild.tool.llvm.archiver"
            isAbstract="true"
            name="%ToolName.archiver.llvm"
            natureFilter="both">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </value>
            </property>
         </supportedProperties>
         <optionCategory
               id="llvm.lib.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.archiver">
         </optionCategory>
         <option
               category="llvm.lib.category.general"
               defaultValue="r"
               id="llvm.both.lib.option.flags"
               name="%Option.Llvm.Archiver.Flags"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.lib.category.options"
               name="%OptionCategory.Options"
               owner="cdt.managedbuild.tool.llvm.archiver">
         </optionCategory>
         <option
               category="llvm.lib.category.options"
               command="d"
               id="llvm.lib.option.delete"
               isAbstract="false"
               name="%Option.Posix.Archiver.delete"
               resourceFilter="all"
               tip="%option.tip.9"
               valueType="boolean">
         </option>
         <option
               category="llvm.lib.category.options"
               command="t"
               id="llvm.lib.option.print.contents"
               isAbstract="false"
               name="%Option.Posix.Archiver.print.contents"
               resourceFilter="all"
               valueType="boolean">
         </option>
         <inputType
               id="cdt.managedbuild.tool.llvm.archiver.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="ARCHIVES"
               id="cdt.managedbuild.tool.llvm.archiver.output"
               nameProvider="io.sloeber.schema.internal.legacy.OutputNameProviderCompatibilityClass"
               outputName="lib_${ProjName}.a">
         </outputType>
      </tool>
      <tool
            command="llvm-as"
            errorParsers="org.eclipse.cdt.core.GASErrorParser"
            id="cdt.managedbuild.tool.llvm.assembler"
            isAbstract="true"
            name="%ToolName.assembler.llvm"
            natureFilter="both"
            outputFlag="-o">
         <optionCategory
               id="llvm.asm.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.assembler">
         </optionCategory>
         <option
               category="llvm.asm.category.general"
               id="llvm.both.asm.option.flags"
               name="%Option.Llvm.Assembler.Flags"
               valueType="string">
         </option>
         <option
               category="llvm.asm.category.general"
               command="-W"
               defaultValue="false"
               id="llvm.both.asm.option.warnings.nowarn"
               name="%Option.Llvm.Assembler.warn.suppress"
               valueType="boolean">
         </option>
         <option
               category="llvm.asm.category.general"
               command="-v"
               defaultValue="false"
               id="llvm.both.asm.option.version"
               name="%Option.Llvm.Assembler.version"
               valueType="boolean">
         </option>
         <inputType
               id="cdt.managedbuild.tool.llvm.assembler.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmAssemblySource">
         </inputType>
         <outputType
               buildVariable="BCS"
               id="cdt.managedbuild.tool.llvm.assembler.output"
               outputExtension="bc">
         </outputType>
      </tool>
      <tool
            command="llc"
            id="cdt.managedbuild.tool.llvm.llc"
            isAbstract="true"
            name="%ToolName.llc.llvm"
            natureFilter="both"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildType">
               <value
                     id="org.eclipse.cdt.build.core.buildType.debug">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildType.release">
               </value>
            </property>
         </supportedProperties>
         <optionCategory
               id="llvm.llc.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.llc">
         </optionCategory>
         <option
               category="llvm.llc.category.general"
               id="llvm.both.llc.option.flags"
               name="%Option.Llvm.Llc.Flags"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.llc.category.options"
               name="%OptionCategory.Options"
               owner="cdt.managedbuild.tool.llvm.llc">
         </optionCategory>
         <option
               category="llvm.llc.category.options"
               command="c"
               id="llvm.both.llc.option.emitc"
               name="%Option.Llvm.Llc.EmitC"
               valueType="boolean">
         </option>
         <option
               category="llvm.llc.category.options"
               command="--stats"
               id="llvm.both.llc.option.printStats"
               name="%Option.Llvm.printStats"
               tip="%option.tip.10"
               valueType="boolean">
         </option>
         <option
               category="llvm.llc.category.options"
               command="-march=${value}"
               id="llvm.both.llc.option.arch"
               name="%Option.Llvm.Llc.Arch"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.llc.category.options.optimization"
               name="%OptionCategory.Optimize"
               owner="cdt.managedbuild.tool.llvm.llc">
         </optionCategory>
         <option
               category="llvm.llc.category.options.optimization"
               id="llvm.llc.option.optimization.level"
               name="%Option.Posix.OptLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  command="-O0"
                  id="llvm.llc.option.optimization.level.none"
                  name="%Option.Posix.Optimize.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O1"
                  id="llvm.llc.option.optimization.level.optimize"
                  name="%Option.Posix.Optimize.Optimize">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O2"
                  id="llvm.llc.option.optimization.level.more"
                  isDefault="true"
                  name="%Option.Posix.Optimize.More">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O3"
                  id="llvm.llc.option.optimization.level.most"
                  name="%Option.Posix.Optimize.Most">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O4"
                  id="llvm.llc.option.optimization.level.runtime"
                  name="%Option.Posix.Optimize.Runtime">
            </enumeratedOptionValue>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.optimization.level.most">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.optimization.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="llvm.llc.category.options.optimization"
               command="--disable-excess-fp-precision"
               id="llvm.llc.option.optimization.disableExcessPrecisionOptimization"
               isAbstract="false"
               name="%Option.Llvm.llc.optimization.disableExcessPrecisionOptimization"
               tip="%option.tip.11"
               valueType="boolean">
         </option>
         <option
               category="llvm.llc.category.options.optimization"
               command="--disable-fp-elim"
               id="llvm.llc.option.optimization.disableFramePointerElimOptimization"
               isAbstract="false"
               name="%Option.Llvm.llc.optimization.disableFramePointerEliminationOptimization"
               valueType="boolean">
         </option>
         <inputType
               id="cdt.managedbuild.tool.llvm.llc.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="org.eclipse.cdt.managedbuilder.llvm.ui.llvmAssemblyCode"
               id="cdt.managedbuild.tool.llvm.llc.output.s"
               outputExtension="s">
         </outputType>
      </tool>
      <tool
            command="lli"
            id="cdt.managedbuild.tool.llvm.lli"
            isAbstract="true"
            name="%ToolName.lli.llvm"
            natureFilter="both">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildType">
               <value
                     id="org.eclipse.cdt.build.core.buildType.debug">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildType.release">
               </value>
            </property>
         </supportedProperties>
         <optionCategory
               id="llvm.lli.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.lli">
         </optionCategory>
         <option
               category="llvm.lli.category.general"
               id="llvm.both.lli.option.flags"
               name="%Option.Llvm.Lli.Flags"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.lli.category.options"
               name="%OptionCategory.Options"
               owner="cdt.managedbuild.tool.llvm.lli">
         </optionCategory>
         <option
               category="llvm.lli.category.options"
               command="-stats"
               id="llvm.both.lli.option.printStats"
               name="%Option.Llvm.printStats"
               tip="%option.tip.12"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.options"
               id="llvm.both.lli.option.interpreter"
               name="%Option.Llvm.Lli.ForceInterpreter"
               valueType="enumerated">
            <enumeratedOptionValue
                  command="-force-interpreter=true"
                  id="llvm.both.lli.option.interpreter.true"
                  name="%enumeratedOptionValue.name">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-force-interpreter=false"
                  id="llvm.both.lli.option.interpreter.false"
                  isDefault="true"
                  name="%enumeratedOptionValue.name.0">
            </enumeratedOptionValue>
         </option>
         <optionCategory
               id="llvm.lli.category.FloatingPointOptions"
               name="%OptionCategory.FloatingPointOptions"
               owner="cdt.managedbuild.tool.llvm.lli">
         </optionCategory>
         <option
               category="llvm.lli.category.FloatingPointOptions"
               command="-soft-float"
               id="llvm.lli.category.FloatingPointOptions.soft-float"
               name="%Option.Llvm.Lli.soft-float"
               resourceFilter="all"
               tip="%option.tip.13"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.FloatingPointOptions"
               command="-enable-unsafe-fp-math"
               id="llvm.lli.category.FloatingPointOptions.enable-unsafe-fp-math"
               name="%Option.Llvm.Lli.enable-unsafe-fp-math"
               resourceFilter="all"
               tip="%option.tip.14"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.FloatingPointOptions"
               command="-disable-excess-fp-precision"
               id="llvm.lli.category.FloatingPointOptions.disable-excess-fp-precision"
               name="%Option.Llvm.Lli.disable-excess-fp-precision"
               resourceFilter="all"
               tip="%option.tip.15"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.FloatingPointOptions"
               command="-enable-finite-only-fp-math"
               id="llvm.lli.category.FloatingPointOptions.enable-finite-only-fp-math"
               name="%Option.Llvm.Lli.enable-finite-only-fp-math"
               resourceFilter="all"
               tip="%option.tip.16"
               valueType="boolean">
         </option>
         <optionCategory
               id="llvm.lli.category.CodeGenerationOptions"
               name="%OptionCategory.CodeGenerationOptions"
               owner="cdt.managedbuild.tool.llvm.lli">
         </optionCategory>
         <option
               category="llvm.lli.category.CodeGenerationOptions"
               command="-disable-post-RA-scheduler"
               id="llvm.lli.category.CodeGenerationOptions.enable-correct-eh-support"
               name="%Option.Llvm.Lli.enable-correct-eh-support"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.CodeGenerationOptions"
               command="-jit-enable-eh"
               id="llvm.lli.category.CodeGenerationOptions.jit-enable-eh"
               name="%Option.Llvm.Lli.jit-enable-eh"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.CodeGenerationOptions"
               command="-disable-post-RA-scheduler"
               id="llvm.lli.category.CodeGenerationOptions.disable-post-RA-scheduler"
               name="%Option.Llvm.Lli.disable-post-RA-scheduler"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.CodeGenerationOptions"
               command="-disable-spill-fusing"
               id="llvm.lli.category.CodeGenerationOptions.disable-spill-fusing"
               name="%Option.Llvm.Lli.disable-spill-fusing"
               valueType="boolean">
         </option>
         <inputType
               id="cdt.managedbuild.tool.llvm.lli.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
      </tool>
      <tool
            errorParsers="org.eclipse.cdt.core.GCCErrorParser"
            id="cdt.managedbuild.tool.llvm.c_cpp.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.abstract"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildType">
               <value
                     id="org.eclipse.cdt.build.core.buildType.debug">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildType.release">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathInclude"
               variableList="CPATH">
         </envVarBuildPath>
         <optionCategory
               id="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               name="%OptionCategory.Dialect"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <optionCategory
               id="llvm.c_cpp.compiler.category.preprocessor"
               name="%OptionCategory.Preproc"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.preprocessor"
               command="-E"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.preprocessor.preprocess"
               name="%Option.Posix.PreprocOnly"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.preprocessor"
               command="-D"
               id="llvm.c_cpp.compiler.option.preprocessor.def"
               name="%Option.Posix.DefSym"
               valueType="definedSymbols">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.preprocessor"
               command="-U"
               id="llvm.c_cpp.compiler.option.preprocessor.undef"
               name="%Option.Posix.UndefSym"
               valueType="undefDefinedSymbols">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.dirs"
               name="%OptionCategory.Includes"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               browseType="directory"
               category="llvm.c_cpp.compiler.category.dirs"
               command="-I"
               id="llvm.c_cpp.compiler.option.include.paths"
               name="%Option.Posix.InclPaths"
               valueType="includePath">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.optimization"
               name="%OptionCategory.Optimize"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.optimization"
               id="llvm.c_cpp.compiler.option.optimization.level"
               name="%Option.Posix.OptLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  command="-O0"
                  id="llvm.c_cpp.compiler.optimization.level.none"
                  name="%Option.Posix.Optimize.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O1"
                  id="llvm.c_cpp.compiler.optimization.level.optimize"
                  name="%Option.Posix.Optimize.Optimize">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O2"
                  id="llvm.c_cpp.compiler.optimization.level.more"
                  isDefault="true"
                  name="%Option.Posix.Optimize.More">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O3"
                  id="llvm.c_cpp.compiler.optimization.level.most"
                  name="%Option.Posix.Optimize.Most">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O4"
                  id="llvm.c_cpp.compiler.optimization.level.runtime"
                  name="%Option.Posix.Optimize.Runtime">
            </enumeratedOptionValue>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.optimization.level.most">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.optimization.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="llvm.c_cpp.compiler.category.optimization"
               id="llvm.c_cpp.compiler.option.optimization.flags"
               name="%Option.Posix.Optimize.Flags"
               defaultValue="-emit-llvm"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.debug"
               name="%OptionCategory.Debug"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.debug"
               id="llvm.c_cpp.compiler.option.debugging.level"
               name="%Option.Posix.DebugLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  id="llvm.c_cpp.compiler.debugging.level.none"
                  isDefault="false"
                  name="%Option.Posix.Debug.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g1"
                  id="llvm.c_cpp.compiler.debugging.level.minimal"
                  name="%Option.Posix.Debug.Min">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g"
                  id="llvm.c_cpp.compiler.debugging.level.default"
                  isDefault="true"
                  name="%Option.Posix.Debug.Def">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g3"
                  id="llvm.c_cpp.compiler.debugging.level.max"
                  isDefault="false"
                  name="%Option.Posix.Debug.Max">
            </enumeratedOptionValue>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.debugging.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.debugging.level.max">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="llvm.c_cpp.compiler.category.debug"
               id="llvm.c_cpp.compiler.option.debugging.other"
               name="%Option.Posix.Debug.Other"
               valueType="string">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.debug"
               command="-fsanitize=address"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.debugging.sanitaddress"
               name="%Option.Posix.Debug.sanitaddress"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.debug"
               command="-fsanitize=pointer-compare -fsanitize=pointer-subtract"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.debugging.sanitpointers"
               name="%Option.Posix.Debug.sanitpointers"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.debug"
               command="-fsanitize=thread"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.debugging.sanitthread"
               name="%Option.Posix.Debug.sanitthread"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.debug"
               command="-fsanitize=leak"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.debugging.sanitleak"
               name="%Option.Posix.Debug.sanitleak"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.debug"
               command="-fsanitize=undefined"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.debugging.sanitundefined"
               name="%Option.Posix.Debug.sanitundefined"
               valueType="boolean">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.warnings"
               name="%OptionCategory.Warn"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-fsyntax-only"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.syntax"
               name="%Option.Posix.Warn.Syntax"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-pedantic"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.pedantic"
               name="%Option.Posix.Warn.Pedandic"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-pedantic-errors"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.pedantic.error"
               name="%Option.Posix.Warn.PedErrors"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-w"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.nowarn"
               name="%Option.Posix.Warn.nowarn"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Wall"
               defaultValue="true"
               id="llvm.c_cpp.compiler.option.warnings.allwarn"
               name="%Option.Posix.Warn.allwarn"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Werror"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.toerrors"
               name="%Option.Posix.Warn.toerrs"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Wfloat-equal"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.wfloatequal"
               name="%Option.Posix.Warn.wfloatequal"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Wcast-align"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.wcastalign"
               name="%Option.Posix.Warn.wcastalign"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Wcast-qual"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.wcastqual"
               name="%Option.Posix.Warn.wcastqual"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Wold-style-cast"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.woldstylecast"
               name="%Option.Posix.Warn.woldstylecast"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Wsign-conversion"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.wsignconv"
               name="%Option.Posix.Warn.wsignconv"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Wundef"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.wundef"
               name="%Option.Posix.Warn.wundef"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Weffc++"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.weffcpp"
               name="%Option.Posix.Warn.weffcpp"
               valueType="boolean">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.other"
               defaultValue="-c -fmessage-length=0"
               id="llvm.c_cpp.compiler.option.misc.other"
               name="%Option.OtherFlags"
               valueType="string">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.other"
               command="-v"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.other.verbose"
               name="%Option.Posix.Verbose"
               valueType="boolean">
         </option>
         <outputType
               buildVariable="BCS"
               id="cdt.managedbuild.tool.llvm.c_cpp.compiler.output"
               outputExtension="bc">
         </outputType>
      </tool>
      <tool
            id="cdt.managedbuild.tool.llvm.c.abstract.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.c.abstract"
            natureFilter="both"
            superClass="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         <envVarBuildPath
               buildPathResolver="org.eclipse.cdt.managedbuilder.gnu.cygwin.CygwinPathResolver"
               pathType="buildpathInclude"
               variableList="CPATH,C_INCLUDE_PATH">
         </envVarBuildPath>
         <option
               category="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std"
               superClass="gnu.c.compiler.option.dialect.std">
         </option>
         <option
               category="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.flags"
               superClass="gnu.c.compiler.option.dialect.flags">
         </option>
         <inputType
               id="cdt.managedbuild.tool.llvm.c.compiler.input"
               languageId="org.eclipse.cdt.core.gcc"
               sourceContentType="org.eclipse.cdt.core.cSource">
         </inputType>
      </tool>
      <tool
            id="cdt.managedbuild.tool.llvm.cpp.abstract.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.cpp.abstract"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         <envVarBuildPath
               buildPathResolver="org.eclipse.cdt.managedbuilder.gnu.cygwin.CygwinPathResolver"
               pathType="buildpathInclude"
               variableList="CPATH,CPLUS_INCLUDE_PATH">
         </envVarBuildPath>
         <option
               category="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std"
               superClass="gnu.cpp.compiler.option.dialect.std">
         </option>
         <option
               category="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.flags"
               superClass="gnu.cpp.compiler.option.dialect.flags">
         </option>
         <inputType
               id="cdt.managedbuild.tool.llvm.cpp.compiler.input"
               languageId="org.eclipse.cdt.core.g++"
               sourceContentType="org.eclipse.cdt.core.cxxSource">
         </inputType>
      </tool>
      <tool
            command="clang"
            id="cdt.managedbuild.tool.llvm.c.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.c"
            natureFilter="both"
            superClass="cdt.managedbuild.tool.llvm.c.abstract.compiler">
      </tool>
      <tool
            command="clang++"
            id="cdt.managedbuild.tool.llvm.cpp.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.cpp"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.cpp.abstract.compiler">
      </tool>
      <tool
            command="llvm-gcc"
            id="cdt.managedbuild.tool.llvm.gcc.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.gcc"
            natureFilter="both"
            superClass="cdt.managedbuild.tool.llvm.c.abstract.compiler">
      </tool>
      <tool
            command="llvm-g++"
            id="cdt.managedbuild.tool.llvm.g++.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.g++"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.cpp.abstract.compiler">
      </tool>
      <tool
            command="clang"
            id="cdt.managedbuild.tool.llvm.clang.c.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.c"
            natureFilter="cnature"
            superClass="cdt.managedbuild.tool.llvm.c.linker">
      </tool>
      <tool
            command="clang++"
            id="cdt.managedbuild.tool.llvm.clang.cpp.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.cpp"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.c.linker">
      </tool>
      <tool
            command="llvm-gcc"
            id="cdt.managedbuild.tool.llvm.gcc.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.gcc"
            natureFilter="cnature"
            superClass="cdt.managedbuild.tool.llvm.c.linker">
      </tool>
      <tool
            command="llvm-g++"
            id="cdt.managedbuild.tool.llvm.g++.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.g++"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.c.linker">
      </tool>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.managedbuilder.llvm.ui.LlvmEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.base"
            isAbstract="true"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.llvm.ui.LlvmIsToolChainSupported"
            name="%ToolChainName.llvm"
            osList="all"
            targetTool="cdt.managedbuild.tool.llvm.archiver">
         <builder
               command="${MAKE_HOME}make"
               id="cdt.managedbuild.target.llvm.builder.base">
         </builder>
         <tool
               id="cdt.managedbuild.tool.llvm.assembler.base"
               isAbstract="true"
               name="%ToolName.assembler.llvm"
               superClass="cdt.managedbuild.tool.llvm.assembler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.archiver.base"
               isAbstract="true"
               name="%ToolName.archiver.llvm"
               superClass="cdt.managedbuild.tool.llvm.archiver">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.clang.base"
            isAbstract="true"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector"
            name="%ToolChainName.llvm.clang"
            osList="all"
            secondaryOutputs="cdt.managedbuild.tool.llvm.c.linker.output.exe.bc"
            superClass="cdt.managedbuild.toolchain.llvm.base"
            targetTool="cdt.managedbuild.tool.llvm.cpp.linker.base;cdt.managedbuild.tool.llvm.c.linker.base">
         <tool
               id="cdt.managedbuild.tool.llvm.c.compiler.base"
               isAbstract="true"
               name="%ToolName.compiler.llvm.c"
               superClass="cdt.managedbuild.tool.llvm.c.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.cpp.compiler.base"
               isAbstract="true"
               name="%ToolName.compiler.llvm.cpp"
               superClass="cdt.managedbuild.tool.llvm.cpp.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.c.linker.base"
               isAbstract="true"
               name="%ToolName.linker.llvm.c"
               natureFilter="cnature"
               superClass="cdt.managedbuild.tool.llvm.clang.c.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.cpp.linker.base"
               isAbstract="true"
               name="%ToolName.linker.llvm.cpp"
               natureFilter="ccnature"
               superClass="cdt.managedbuild.tool.llvm.clang.cpp.linker">
            <option
                  id="llvm.c.link.base.option.ldflags"
                  isAbstract="true"
                  name="%Option.Posix.Linker.Flags"
                  resourceFilter="all"
                  superClass="llvm.c.link.option.ldflags"
                  valueType="string">
            </option>
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.clang.linux.base"
            isAbstract="false"
            name="%ToolChainName.llvm.linux"
            osList="linux,hpux,aix,qnx"
            superClass="cdt.managedbuild.toolchain.llvm.clang.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.target.llvm.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="linux,hpux,aix,qnx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.clang.macosx.base"
            isAbstract="false"
            name="%ToolChainName.llvm.macosx"
            osList="macosx"
            superClass="cdt.managedbuild.toolchain.llvm.clang.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.MachO64"
               id="cdt.managedbuild.target.llvm.macosx.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="macosx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.managedbuilder.gnu.cygwin.GnuCygwinConfigurationEnvironmentSupplier"
            id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.cygwin.IsGnuCygwinToolChainSupported"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorCygwin"
            name="%ToolChainName.llvm.clang.win32.cygwin"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.clang.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.Cygwin_PE64"
               id="cdt.managedbuild.target.llvm.win32.cygwin.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwIsToolChainSupported"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorMinGW"
            name="%ToolChainName.llvm.clang.win32.mingw"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.clang.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE64"
               id="cdt.managedbuild.target.llvm.win32.mingw.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.gnu.base"
            isAbstract="true"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector"
            name="%ToolChainName.llvm.gnu"
            osList="all"
            secondaryOutputs="cdt.managedbuild.tool.llvm.c.linker.output.exe.bc"
            superClass="cdt.managedbuild.toolchain.llvm.base"
            targetTool="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base;cdt.managedbuild.tool.llvm.gnu.c.linker.base">
         <tool
               id="cdt.managedbuild.tool.llvm.gnu.c.compiler.base"
               isAbstract="true"
               name="%ToolName.compiler.llvm.gcc"
               superClass="cdt.managedbuild.tool.llvm.gcc.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base"
               isAbstract="true"
               name="%ToolName.compiler.llvm.g++"
               superClass="cdt.managedbuild.tool.llvm.g++.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.gnu.c.linker.base"
               isAbstract="true"
               name="%ToolName.linker.llvm.gcc"
               natureFilter="cnature"
               superClass="cdt.managedbuild.tool.llvm.gcc.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base"
               isAbstract="true"
               name="%ToolName.linker.llvm.g++"
               natureFilter="ccnature"
               superClass="cdt.managedbuild.tool.llvm.g++.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.gnu.linux.base"
            isAbstract="false"
            name="%ToolChainName.llvm.gnu.linux"
            osList="linux,hpux,aix,qnx"
            superClass="cdt.managedbuild.toolchain.llvm.gnu.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.target.llvm.gnu.linux.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="linux,hpux,aix,qnx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.gnu.macosx.base"
            isAbstract="false"
            name="%ToolChainName.llvm.gnu.macosx"
            osList="macosx"
            superClass="cdt.managedbuild.toolchain.llvm.gnu.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.MachO64"
               id="cdt.managedbuild.target.llvm.gnu.macosx.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="macosx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.managedbuilder.gnu.cygwin.GnuCygwinConfigurationEnvironmentSupplier"
            id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.cygwin.IsGnuCygwinToolChainSupported"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorCygwin"
            name="%ToolChainName.llvm.gnu.win32.cygwin"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.gnu.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.Cygwin_PE64"
               id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwIsToolChainSupported"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorMinGW"
            name="%ToolChainName.llvm.gnu.win32.mingw"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.gnu.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE64"
               id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.with.static.compiler.base"
            isAbstract="true"
            name="%ToolChainName.llvm.with.static.compiler"
            osList="all"
            superClass="cdt.managedbuild.toolchain.llvm.base"
            targetTool="cdt.managedbuild.tool.llvm.llc.base">
         <tool
               id="cdt.managedbuild.tool.llvm.llc.base"
               isAbstract="true"
               name="%ToolName.llc.llvm"
               natureFilter="both"
               superClass="cdt.managedbuild.tool.llvm.llc">
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base"
            isAbstract="false"
            name="%ToolChainName.llvm.static.compiler.linux"
            osList="linux,hpux,aix,qnx"
            superClass="cdt.managedbuild.toolchain.llvm.with.static.compiler.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="linux,hpux,aix,qnx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base"
            isAbstract="false"
            name="%ToolChainName.llvm.static.compiler.macosx"
            osList="macosx"
            superClass="cdt.managedbuild.toolchain.llvm.with.static.compiler.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.MachO64"
               id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="macosx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwIsToolChainSupported"
            name="%ToolChainName.llvm.static.compiler.win32"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.with.static.compiler.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE64"
               id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.jit.base"
            isAbstract="true"
            name="%ToolChainName.llvm.jit"
            osList="all"
            superClass="cdt.managedbuild.toolchain.llvm.base"
            targetTool="cdt.managedbuild.tool.llvm.lli.base">
         <tool
               id="cdt.managedbuild.tool.llvm.lli.base"
               isAbstract="true"
               name="%ToolName.lli.llvm"
               natureFilter="both"
               superClass="cdt.managedbuild.tool.llvm.lli">
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.jit.linux.base"
            isAbstract="false"
            name="%ToolChainName.llvm.jit.linux"
            osList="linux,hpux,aix,qnx"
            superClass="cdt.managedbuild.toolchain.llvm.jit.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.target.llvm.jit.linux.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="linux,hpux,aix,qnx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.jit.macosx.base"
            isAbstract="false"
            name="%ToolChainName.llvm.jit.macosx"
            osList="macosx"
            superClass="cdt.managedbuild.toolchain.llvm.jit.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.MachO64"
               id="cdt.managedbuild.target.llvm.jit.macosx.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="macosx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.jit.win32.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwIsToolChainSupported"
            name="%ToolChainName.llvm.jit.win32"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.jit.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE64"
               id="cdt.managedbuild.target.llvm.jit.win32.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.clang.linux.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.clang.linux.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.clang.linux.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.so.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.so.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.clang.linux.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.lib.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.lib.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.clang.macosx.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.clang.macosx.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.exe.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="al"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.exe.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.clang.macosx.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.so.debug"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.so.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.clang.macosx.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.lib.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.lib.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.clang.win32.cygwin.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.clang.win32.cygwin.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin..exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.clang.win32.cygwin.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.clang.win32.cygwin.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.clang.win32.mingw.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.clang.win32.mingw.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw..exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.clang.win32.mingw.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.clang.win32.mingw.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.gnu.linux.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.gnu.linux.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.exe.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.exe.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.gnu.linux.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.so.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.so.debug"
                     isAbstract="true"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.so.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.gnu.linux.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.lib.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.lib.debug"
                     isAbstract="true"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.lib.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.gnu.macosx.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.gnu.macosx.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.exe.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.exe.release"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.gnu.macosx.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.so.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.so.debug"
                     isAbstract="true"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.so.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.gnu.macosx.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.lib.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.lib.debug"
                     isAbstract="true"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.lib.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            artifactExtension="exe"
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            artifactExtension="exe"
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.gnu.win32.mingw.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.config.llvm.gnu.win32.mingw.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.config.llvm.gnu.win32.mingw.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.config.llvm.gnu.win32.mingw.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.static.compiler.linux.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.static.compiler.linux.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.exe.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.exe.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.static.compiler.linux.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.so.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.so.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.so.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.static.compiler.linux.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.lib.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.lib.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.llc.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.static.compiler.macosx.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.exe.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.exe.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.static.compiler.macosx.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.so.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.so.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.so.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.static.compiler.macosx.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.lib.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.lib.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.llc.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.static.compiler.win32.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.static.compiler.win32.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.so.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.static.compiler.win32.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.static.compiler.win32.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.llc.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.jit.linux.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.jit.linux.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.exe.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.exe.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.jit.linux.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.so.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.ji.linux.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.so.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.so.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.jit.linux.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.lib.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.lib.debugebug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.lib.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.lib.releaseease"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.jit.macosx.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.jit.macosx.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.exe.debug"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.exe.release"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.jit.macosx.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.so.debug"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.ji.macosx.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.so.release"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.so.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.jit.macosx.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.lib.debug"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.lib.debugebug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.lib.release"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.lib.releaseease"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.jit.win32.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.jit.win32.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.exe.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.exe.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.jit.win32.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.so.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.so.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.ji.win32.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.so.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.jit.win32.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.lib.debug"
               name="%ConfigName.Dbg"
               superClass="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.lib.debugebug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.lib.release"
               name="%ConfigName.Rel"
               superClass="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.lib.releaseease"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
   </extension>
      <extension
            id="CDT.mvc.build"
            point="io.sloeber.autoBuild.buildDefinitions">
      <managedBuildRevision
            fileVersion="4.0.0">
      </managedBuildRevision>
      <tool
            command="cl /c"
            errorParsers="org.eclipse.cdt.core.VCErrorParser"
            id="org.eclipse.cdt.msvc.cl.abstract"
            isAbstract="true"
            name="%compiler.name.abstract"
            outputFlag="/Fo">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildType">
               <value
                     id="org.eclipse.cdt.build.core.buildType.debug">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildType.release">
               </value>
            </property>
         </supportedProperties>
         <optionCategory
               id="org.eclipse.cdt.msvc.cl.optionCategory.optimization"
               name="Optimization">
         </optionCategory>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.optimization"
               id="org.eclipse.cdt.msvc.cl.option.optimization"
               name="Optimization"
               resourceFilter="all"
               valueType="enumerated">
            <enumeratedOptionValue
                  id="org.eclipse.cdt.msvc.cl.option.optimization.default"
                  isDefault="false"
                  name="Default">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="/O1"
                  id="org.eclipse.cdt.msvc.cl.option.optimization.1"
                  isDefault="false"
                  name="Minimize Size (/O1)">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="/O2"
                  id="org.eclipse.cdt.msvc.cl.option.optimization.2"
                  isDefault="true"
                  name="Maximize Speed (/O2)">
            </enumeratedOptionValue>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="org.eclipse.cdt.msvc.cl.option.optimization.2">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="org.eclipse.cdt.msvc.cl.option.optimization.default">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <optionCategory
               id="org.eclipse.cdt.msvc.cl.optionCategory.codegen"
               name="Code Generation">
         </optionCategory>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.codegen"
               id="org.eclipse.cdt.msvc.cl.option.arch"
               name="Minimum CPU Architecture"
               resourceFilter="all"
               valueType="enumerated">
            <enumeratedOptionValue
                  id="org.eclipse.cdt.msvc.cl.option.arch.default"
                  isDefault="true"
                  name="Default">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="/arch:SSE"
                  id="org.eclipse.cdt.msvc.cl.option.arch.sse"
                  isDefault="false"
                  name="SSE (/arch:SSE)">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  id="org.eclipse.cdt.msvc.cl.option.arch.sse2"
                  isDefault="false"
                  name="SSE2 (/arch:SSE2)">
            </enumeratedOptionValue>
         </option>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.codegen"
               command="/clr"
               defaultValue="false"
               id="org.eclipse.cdt.msvc.cl.option.clr"
               name="Common Language Runtime (/clr)"
               resourceFilter="all"
               valueType="boolean">
         </option>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.codegen"
               command="/EHs"
               defaultValue="true"
               id="org.eclipse.cdt.msvc.cl.option.exceptions"
               name="Enable C++ Exception Handling (/EHs)"
               resourceFilter="all"
               valueType="boolean">
         </option>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.codegen"
               commandFalse="/GR-"
               defaultValue="true"
               id="org.eclipse.cdt.msvc.cl.option.rtti"
               name="Enable Run-Time Type Information (/GR)"
               resourceFilter="all"
               valueType="boolean">
         </option>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.codegen"
               id="org.eclipse.cdt.msvc.cl.option.runtime"
               name="Run-Time Library"
               resourceFilter="all"
               valueType="enumerated">
            <enumeratedOptionValue
                  command="/MT"
                  id="org.eclipse.cdt.msvc.cl.option.runtime.mt"
                  isDefault="false"
                  name="Multi-Threaded Static (/MT)">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="/MTd"
                  id="org.eclipse.cdt.msvc.cl.option.runtime.mtd"
                  isDefault="false"
                  name="Multi-Threaded Static Debug (/MTd)">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="/MD"
                  id="org.eclipse.cdt.msvc.cl.option.runtime.md"
                  isDefault="true"
                  name="Multi-Threaded DLL (/MD)">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="/MDd"
                  id="org.eclipse.cdt.msvc.cl.option.runtime.mdd"
                  isDefault="false"
                  name="Multi-Threaded DLL Debug (/MDd)">
            </enumeratedOptionValue>
         </option>
         <optionCategory
               id="org.eclipse.cdt.msvc.cl.optionCategory.debug"
               name="Debugging">
         </optionCategory>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.debug"
               id="org.eclipse.cdt.msvc.cl.option.debugFormat"
               name="Debug Information Format"
               resourceFilter="all"
               valueType="enumerated">
            <enumeratedOptionValue
                  id="org.eclipse.cdt.msvc.cl.option.debugFormat.none"
                  isDefault="true"
                  name="None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="/Z7"
                  id="org.eclipse.cdt.msvc.cl.option.debugFormat.c7"
                  isDefault="false"
                  name="C7 Compatible (/Z7)">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="/Zi"
                  id="org.eclipse.cdt.msvc.cl.option.debugFormat.complete"
                  isDefault="false"
                  name="Complete (/Zi)">
            </enumeratedOptionValue>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="org.eclipse.cdt.msvc.cl.option.debugFormat.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="org.eclipse.cdt.msvc.cl.option.debugFormat.complete">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <optionCategory
               id="org.eclipse.cdt.msvc.cl.optionCategory.preprocessor"
               name="Preprocessor">
         </optionCategory>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.preprocessor"
               command="/D"
               id="org.eclipse.cdt.msvc.cl.option.macros"
               name="Defines (/D)"
               resourceFilter="all"
               valueType="definedSymbols">
         </option>
         <option
               browseType="directory"
               category="org.eclipse.cdt.msvc.cl.optionCategory.preprocessor"
               command="/I"
               id="org.eclipse.cdt.msvc.cl.option.includes"
               name="Include Path (/I)"
               resourceFilter="all"
               valueType="includePath">
         </option>
         <optionCategory
               id="org.eclipse.cdt.msvc.cl.optionCategory.language"
               name="Language">
         </optionCategory>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.language"
               command="/openmp"
               defaultValue="false"
               id="org.eclipse.cdt.msvc.cl.option.openmp"
               name="Enable OpenMP (/openmp)"
               resourceFilter="all"
               valueType="boolean">
         </option>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.language"
               commandFalse="/Za"
               defaultValue="true"
               id="org.eclipse.cdt.msvc.cl.option.langExtensions"
               name="Enable Language Extensions (/Ze,/Za)"
               resourceFilter="all"
               valueType="boolean">
         </option>
         <optionCategory
               id="org.eclipse.cdt.msvc.cl.optionCategory.miscellaneous"
               name="Miscellaneous">
         </optionCategory>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.miscellaneous"
               command="/nologo"
               defaultValue="true"
               id="org.eclipse.cdt.msvc.cl.option.nologo"
               name="Suppress Banner (/nologo)"
               resourceFilter="all"
               valueType="boolean">
         </option>
         <option
               category="org.eclipse.cdt.msvc.cl.optionCategory.miscellaneous"
               id="org.eclipse.cdt.msvc.cl.option.others"
               name="Other Options"
               resourceFilter="all"
               valueType="stringList">
         </option>
         <outputType
               id="org.eclipse.cdt.msvc.cl.outputType"
               outputExtension="obj">
         </outputType>
      </tool>
      <toolChain
            archList="all"
            environmentSupplier="org.eclipse.cdt.msw.build.WinEnvironmentVariableSupplier"
            id="org.eclipse.cdt.msvc.toolchain.base"
            isAbstract="true"
            name="%toolchain.name"
            osList="win32"
            targetTool="org.eclipse.cdt.msvc.link;org.eclipse.cdt.msvc.lib">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE64"
               id="org.eclipse.cdt.msvc.targetPlatform"
               osList="win32">
         </targetPlatform>
         <builder
               command="${MAKE_HOME}make"
               id="org.eclipse.cdt.msvc.builder">
         </builder>
         <tool
               id="org.eclipse.cdt.msvc.cl.c"
               isAbstract="false"
               name="%compiler.name.c"
               natureFilter="both"
               superClass="org.eclipse.cdt.msvc.cl.abstract">
            <inputType
                  id="org.eclipse.cdt.msvc.cl.inputType.c"
                  scannerConfigDiscoveryProfileId="org.eclipse.cdt.msw.build.clScannerInfo"
                  sourceContentType="org.eclipse.cdt.core.cSource">
            </inputType>
         </tool>
         <tool
               id="org.eclipse.cdt.msvc.cl.cpp"
               isAbstract="false"
               name="%compiler.name.cpp"
               natureFilter="ccnature"
               superClass="org.eclipse.cdt.msvc.cl.abstract">
            <inputType
                  id="org.eclipse.cdt.msvc.cl.inputType"
                  scannerConfigDiscoveryProfileId="org.eclipse.cdt.msw.build.clScannerInfo"
                  sourceContentType="org.eclipse.cdt.core.cxxSource">
            </inputType>
         </tool>
         <tool
               command="rc"
               errorParsers="org.eclipse.cdt.core.VCErrorParser"
               id="org.eclipse.cdt.msvc.rc"
               name="%rc.name"
               natureFilter="both"
               outputFlag="/Fo">
            <optionCategory
                  id="org.eclipse.cdt.msvc.rc.optionCategory.preprocessor"
                  name="Preprocessor">
            </optionCategory>
            <option
                  browseType="directory"
                  category="org.eclipse.cdt.msvc.rc.optionCategory.preprocessor"
                  command="/I"
                  id="org.eclipse.cdt.msvc.rc.option.includes"
                  name="Include Path (/I)"
                  resourceFilter="all"
                  valueType="includePath">
            </option>
            <option
                  category="org.eclipse.cdt.msvc.rc.optionCategory.preprocessor"
                  command="/D"
                  id="org.eclipse.cdt.msvc.rc.option.defines"
                  name="Defines (/D)"
                  resourceFilter="all"
                  valueType="definedSymbols">
            </option>
            <optionCategory
                  id="org.eclipse.cdt.msvc.rc.optionCategory.misc"
                  name="Miscellaneous">
            </optionCategory>
            <option
                  category="org.eclipse.cdt.msvc.rc.optionCategory.misc"
                  id="org.eclipse.cdt.msvc.rc.option.others"
                  name="Other Options"
                  resourceFilter="all"
                  valueType="stringList">
            </option>
            <inputType
                  id="org.eclipse.cdt.msvc.rc.inputType"
                  extensions="rc">
            </inputType>
            <outputType
                  id="org.eclipse.cdt.msvc.rc.outputType"
                  outputExtension="res">
            </outputType>
         </tool>
         <tool
               command="link"
               errorParsers="org.eclipse.cdt.core.VCErrorParser"
               id="org.eclipse.cdt.msvc.link"
               name="%linker.name"
               natureFilter="both"
               outputFlag="/OUT:">
            <supportedProperties>
               <property
                     id="org.eclipse.cdt.build.core.buildArtefactType">
                  <value
                        id="org.eclipse.cdt.build.core.buildArtefactType.exe">
                  </value>
                  <value
                        id="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
                  </value>
               </property>
            </supportedProperties>
            <option
                  command="/DLL"
                  defaultValue="false"
                  id="org.eclipse.cdt.msvc.link.option.dll"
                  name="Build a DLL"
                  resourceFilter="all"
                  valueType="boolean">
               <enablement
                     attribute="defaultValue"
                     extensionAdjustment="false"
                     type="CONTAINER_ATTRIBUTE"
                     value="true">
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
                  </checkBuildProperty>
               </enablement>
            </option>
            <optionCategory
                  id="org.eclipse.cdt.msvc.link.optionCategory.general"
                  name="General">
            </optionCategory>
            <option
                  category="org.eclipse.cdt.msvc.link.optionCategory.general"
                  command="/debug"
                  defaultValue="false"
                  id="org.eclipse.cdt.msvc.link.option.debug"
                  name="Generate Debug Info (/debug)"
                  resourceFilter="all"
                  valueType="boolean">
               <enablement
                     attribute="value"
                     type="CONTAINER_ATTRIBUTE"
                     value="true">
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildType"
                        value="org.eclipse.cdt.build.core.buildType.debug">
                  </checkBuildProperty>
               </enablement>
            </option>
            <option
                  category="org.eclipse.cdt.msvc.link.optionCategory.general"
                  command="/nologo"
                  defaultValue="true"
                  id="org.eclipse.cdt.msvc.link.option.nologo"
                  name="Suppress Banner (/nologo)"
                  resourceFilter="all"
                  valueType="boolean">
            </option>
            <option
                  category="org.eclipse.cdt.msvc.link.optionCategory.general"
                  id="org.eclipse.cdt.msvc.link.option.others"
                  name="Other Options"
                  resourceFilter="all"
                  valueType="stringList">
            </option>
            <optionCategory
                  id="org.eclipse.cdt.msvc.link.optionCategory.libraries"
                  name="Libraries">
            </optionCategory>
            <option
                  browseType="directory"
                  category="org.eclipse.cdt.msvc.link.optionCategory.libraries"
                  command="/libpath:"
                  id="org.eclipse.cdt.msvc.link.option.libpath"
                  name="Additional Libpath (/libpath)"
                  resourceFilter="all"
                  valueType="stringList">
            </option>
            <option
                  browseType="file"
                  category="org.eclipse.cdt.msvc.link.optionCategory.libraries"
                  id="org.eclipse.cdt.msvc.link.option.libraries"
                  name="Libraries"
                  resourceFilter="all"
                  valueType="libs">
            </option>
            <inputType
                  id="org.eclipse.cdt.msvc.link.inputType"
                  extensions="res,obj">
            </inputType>
            <outputType
                  id="org.eclipse.cdt.msvc.link.outputType"
                  outputExtension="exe">
            </outputType>
            <outputType
                  id="org.eclipse.cdt.msvc.link.outputType.dll"
                  outputExtension="dll">
            </outputType>
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
         <tool
               command="lib"
               id="org.eclipse.cdt.msvc.lib"
               name="%lib.name"
               natureFilter="both"
               outputFlag="/OUT:">
            <supportedProperties>
               <property
                     id="org.eclipse.cdt.build.core.buildArtefactType">
                  <value
                        id="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </value>
               </property>
            </supportedProperties>
            <optionCategory
                  id="org.eclipse.cdt.msvc.lib.optionCategory.general"
                  name="General">
            </optionCategory>
            <option
                  category="org.eclipse.cdt.msvc.lib.optionCategory.general"
                  command="/nologo"
                  defaultValue="true"
                  id="org.eclipse.cdt.msvc.lib.option.nologo"
                  name="Suppress Banner (/nologo)"
                  resourceFilter="all"
                  valueType="boolean">
            </option>
            <inputType
                  id="org.eclipse.cdt.msvc.lib.inputType"
                  extensions="obj,res">
            </inputType>
            <outputType
                  id="org.eclipse.cdt.msvc.lib.outputType"
                  outputExtension="lib">
            </outputType>
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
         </tool>
      </toolChain>
      <configuration
            artifactExtension="exe"
            id="org.eclipse.cdt.msvc.configuration">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="lib">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="org.eclipse.cdt.msvc.projectType.exe"
            environmentSupplier="org.eclipse.cdt.msw.build.WinEnvironmentVariableSupplier">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               id="org.eclipse.cdt.msvc.exe.debug"
               name="%config.debug"
               superClass="org.eclipse.cdt.msvc.configuration">
            <toolChain
                  id="org.eclipse.cdt.msvc.toolchain.exe.debug"
                  superClass="org.eclipse.cdt.msvc.toolchain.base">
               <targetPlatform
                     id="org.eclipse.cdt.msvc.targetPlatform.exe.debug"
                     superClass="org.eclipse.cdt.msvc.targetPlatform">
               </targetPlatform>
               <tool
                     id="org.eclipse.cdt.msvc.cl.exe.debug"
                     superClass="org.eclipse.cdt.msvc.cl.cpp">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.rc.exe.debug"
                     superClass="org.eclipse.cdt.msvc.rc">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.link.exe.debug"
                     superClass="org.eclipse.cdt.msvc.link">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.cl.c.exe.debug"
                     superClass="org.eclipse.cdt.msvc.cl.c">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               id="org.eclipse.cdt.msvc.exe.release"
               name="%config.release"
               superClass="org.eclipse.cdt.msvc.configuration">
            <toolChain
                  id="org.eclipse.cdt.msvc.toolchain.exe.release"
                  superClass="org.eclipse.cdt.msvc.toolchain.base">
               <targetPlatform
                     id="org.eclipse.cdt.msvc.targetPlatform.exe.release"
                     superClass="org.eclipse.cdt.msvc.targetPlatform">
               </targetPlatform>
               <tool
                     id="org.eclipse.cdt.msvc.cl.exe.release"
                     superClass="org.eclipse.cdt.msvc.cl.cpp">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.rc.exe.release"
                     superClass="org.eclipse.cdt.msvc.rc">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.link.exe.release"
                     superClass="org.eclipse.cdt.msvc.link">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.cl.c.exe.release"
                     superClass="org.eclipse.cdt.msvc.cl.c">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="org.eclipse.cdt.msvc.projectType.dll"
            environmentSupplier="org.eclipse.cdt.msw.build.WinEnvironmentVariableSupplier">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               id="org.eclipse.cdt.msvc.dll.debug"
               name="%config.debug"
               superClass="org.eclipse.cdt.msvc.configuration">
            <toolChain
                  id="org.eclipse.cdt.msvc.toolchain.dll.debug"
                  superClass="org.eclipse.cdt.msvc.toolchain.base">
               <targetPlatform
                     id="org.eclipse.cdt.msvc.targetPlatform.dll.debug"
                     superClass="org.eclipse.cdt.msvc.targetPlatform">
               </targetPlatform>
               <tool
                     id="org.eclipse.cdt.msvc.cl.dll.debug"
                     superClass="org.eclipse.cdt.msvc.cl.cpp">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.rc.dll.debug"
                     superClass="org.eclipse.cdt.msvc.rc">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.link.dll.debug"
                     superClass="org.eclipse.cdt.msvc.link">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.cl.c.dll.debug"
                     superClass="org.eclipse.cdt.msvc.cl.c">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               id="org.eclipse.cdt.msvc.dll.release"
               name="%config.release"
               superClass="org.eclipse.cdt.msvc.configuration">
            <toolChain
                  id="org.eclipse.cdt.msvc.toolchain.dll.release"
                  superClass="org.eclipse.cdt.msvc.toolchain.base">
               <targetPlatform
                     id="org.eclipse.cdt.msvc.targetPlatform.dll.release"
                     superClass="org.eclipse.cdt.msvc.targetPlatform">
               </targetPlatform>
               <tool
                     id="org.eclipse.cdt.msvc.cl.dll.release"
                     superClass="org.eclipse.cdt.msvc.cl.cpp">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.rc.dll.release"
                     superClass="org.eclipse.cdt.msvc.rc">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.link.dll.release"
                     superClass="org.eclipse.cdt.msvc.link">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.cl.c.dll.release"
                     superClass="org.eclipse.cdt.msvc.cl.c">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="org.eclipse.cdt.msvc.projectType.lib"
            environmentSupplier="org.eclipse.cdt.msw.build.WinEnvironmentVariableSupplier">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               id="org.eclipse.cdt.msvc.lib.debug"
               name="%config.debug"
               superClass="org.eclipse.cdt.msvc.configuration">
            <toolChain
                  id="org.eclipse.cdt.msvc.toolchain.lib.debug"
                  superClass="org.eclipse.cdt.msvc.toolchain.base">
               <targetPlatform
                     id="org.eclipse.cdt.msvc.targetPlatform.lib.debug"
                     superClass="org.eclipse.cdt.msvc.targetPlatform">
               </targetPlatform>
               <tool
                     id="org.eclipse.cdt.msvc.cl.lib.debug"
                     superClass="org.eclipse.cdt.msvc.cl.cpp">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.rc.lib.debug"
                     superClass="org.eclipse.cdt.msvc.rc">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.lib.lib.debug"
                     superClass="org.eclipse.cdt.msvc.lib">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.cl.c.lib.debug"
                     superClass="org.eclipse.cdt.msvc.cl.c">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               id="org.eclipse.cdt.msvc.lib.release"
               name="%config.release"
               superClass="org.eclipse.cdt.msvc.configuration">
            <toolChain
                  id="org.eclipse.cdt.msvc.toolchain.lib.release"
                  superClass="org.eclipse.cdt.msvc.toolchain.base">
               <targetPlatform
                     id="org.eclipse.cdt.msvc.targetPlatform.lib.release"
                     superClass="org.eclipse.cdt.msvc.targetPlatform">
               </targetPlatform>
               <tool
                     id="org.eclipse.cdt.msvc.cl.lib.release"
                     superClass="org.eclipse.cdt.msvc.cl.cpp">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.rc.lib.release"
                     superClass="org.eclipse.cdt.msvc.rc">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.lib.lib.release"
                     superClass="org.eclipse.cdt.msvc.lib">
               </tool>
               <tool
                     id="org.eclipse.cdt.msvc.cl.c.lib.release"
                     superClass="org.eclipse.cdt.msvc.cl.c">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
   </extension>
</plugin>



		
		
